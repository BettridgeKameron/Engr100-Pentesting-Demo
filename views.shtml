<!--#set var="camStr" val="camera=" -->
<!--#set var="camnbr" val="1" -->
<!--#if expr="$imagePath >< $camStr$1" -->
<!--#endif -->
<!--#include virtual="/incl/top_incl.shtml" -->

<!--#set var="param" val="Layout,Network.Enabled,ImageSource.NbrOfSources,ImageSource.I0.Name,ImageSource.I0.Video.Connector,Output.NbrOfOutputs,Input.NbrOfInputs,Properties.Image,System.BoaGroupPolicy,TemperatureControl,Properties.TemperatureSensor" -->
<!--#set var="param" val="$param$,Network.IPv6.Enabled" -->
<!--#set var="param" val="$param$,Properties.PTZ.PTZ,PTZ.Support" -->
<!--#include virtual="/sm/sm.srv?action=get&group=PTZ.UserAdv,PTZ.Various,PTZ.NbrOfCameras" -->
<!--#set var="param" val="$param$,Properties.Audio,Audio" -->
<!--#if expr="$nbr = quad" -->
  <!--#set var="audiochannel" val="4" -->
<!--#else -->
  <!--#set var="audiochannel" val="$nbr" -->
<!--#endif -->
<!--#set var="audionbr" val="$(root_Audio_A$audiochannel$_Source)" -->
<!--#if expr="$audionbr = " -->
  <!--#set var="audionbr" val="0" -->
<!--#endif -->
<!--#set var="param" val="$param$,HTTPS" -->
<!--#set var="param" val="$param$,StreamCache,StreamProfile" -->
<!--#set var="param" val="$param$,ImageSource.I0.DigitalPTZ.Enabled" -->
<!--#set var="param" val="$param$,PTZ.ImageSource.I0.PTZEnabled" -->



<!--#set var="param" val="$param$,Properties.LightControl" -->







<!--#if expr="$http_user_realms >< ¤Operator¤" -->
  <!--#set var="param" val="$param$,ImageSource.I0.SceneProfile" -->
  <!--#set var="param" val="$param$,TrafficWiz" -->
<!--#endif -->

<!--#include virtual="/sm/sm.srv?action=get&group=$param$" -->

<!--#if expr="$root_ImageSource_NbrOfSources != 1" -->
  <!--#include virtual="/sm/sm.srv?action=get&group=ImageSource.I1.Name,ImageSource.I1.Video.Connector" -->
  <!--#include virtual="/sm/sm.srv?action=get&group=ImageSource.I2.Name,ImageSource.I2.Video.Connector" -->
  <!--#include virtual="/sm/sm.srv?action=get&group=ImageSource.I3.Name,ImageSource.I3.Video.Connector" -->
<!--#endif -->

<!--#if expr="_$size = _" -->
  <!--#set var="size" val="1" -->
<!--#endif -->

<!--#if expr="$imagepath >< ://" -->
  <!--#set var="external" val="yes" -->
<!--#elif expr="$imagepath >< %3A//" -->
  <!--#set var="external" val="yes" -->
<!--#else -->
  <!--#set var="external" val="no" -->
<!--#endif -->

<!--#include virtual="/sm/sm.srv?action=get&group=Properties.ImageSource.OpticsSetup" -->
<!--#set var="liveFocus" val="no" -->
<!--#if expr="$root_Properties_ImageSource_OpticsSetup_Focus = no" -->
  <!--#if expr="$root_Properties_ImageSource_OpticsSetup_Zoom = no" -->
    <!--#set var="liveFocus" val="yes" -->
  <!--#endif -->
<!--#endif -->


<!--#if expr="$root_PTZ_ImageSource_I0_PTZEnabled != false" -->
  <!--#set var="root_ImageSource_NbrOfSources" val="1" -->
<!--#endif -->

<!--#include virtual="/sm/sm.srv?action=get&group=Image.I0.Name,Image.I0.Enabled" -->
<!--#include virtual="/sm/sm.srv?action=get&group=Image.I1.Name" -->


<!--#if expr="$external = yes" -->
  <!--#set var="fmt" val="$root_Layout_DefaultVideoFormat$+" -->
<!--#elif expr="$imagepath = " -->
  <!--#set var="fmt" val="$root_Layout_DefaultVideoFormat$+" -->
<!--#elif expr="$imagepath >< videoformat-hdtv" -->
  <!--#set var="fmt" val="hdtv+" -->
<!--#elif expr="$imagepath >< mpeg4" -->
  <!--#set var="fmt" val="mpeg4+" -->
<!--#elif expr="$imagepath >< h264" -->
  <!--#set var="fmt" val="h264+" -->
<!--#else -->
  <!--#set var="fmt" val="mjpeg+" -->
<!--#endif -->


<!--#set var="selectedprofile" val="$fmt" -->
<!--#if expr="_$imagePath != _" -->
  <!--#if expr="_$streamprofile != _" --><!--#set var="selectedprofile" val="$streamprofile" --><!--#endif -->
<!--#else -->
  <!--#if expr="_$root_Layout_DefaultStreamProfile != _" --><!--#set var="selectedprofile" val="$root_Layout_DefaultStreamProfile" --><!--#endif -->
  <!--#set var="streamprofile" val="$root_Layout_DefaultStreamProfile$" -->
<!--#endif -->

<!--#set var="imagesize_opts" val="" -->
<!--#if expr="_$streamprofile != _" -->
  <!--#if expr="$invalidProfile != yes" -->
    <!--#set var="imagesize_opts" val="$imagesize_opts$&streamprofile=$streamprofile$" -->
  <!--#endif -->
<!--#endif -->
<!--#include virtual="/axis-cgi/view/imagesize.cgi?format=ssi&camera=$streamnbr$$imagesize_opts$" -->

<!--#set var="checkResolution" value="no" -->

    <!--#if expr="$root_PTZ_ImageSource_I0_PTZEnabled != false" -->
      <!--#set var="checkResolution" value="yes" -->
      <!--#if expr="_$streamprofile != _" -->
        <!--#if expr="_$img_width = _" -->
          <!--#include virtual="/axis-cgi/view/imagesize.cgi?format=ssi&camera=$streamnbr$" -->
        <!--#endif -->
      <!--#endif -->
    <!--#endif -->
<!--#set var="snapshotWidth" val="$img_width$" -->
<!--#set var="snapshotHeight" val="$img_height$" -->

<!--#set var="showSizeButtons" val="no" -->

<!--#if expr="$root_Properties_PTZ_PTZ = yes" -->
  <!--#include virtual="/incl/setabsrel.shtml" -->
<!--#endif -->

<!--#set var="showPTZCrosshair" val="yes" -->

<!--#if expr="_$root_ImageSource_NbrOfSources = _" -->
  <!--#set var="root_ImageSource_NbrOfSources" val="0" -->
<!--#endif -->
<!--#if expr="_$root_Output_NbrOfOutputs = _" -->
  <!--#set var="root_Output_NbrOfOutputs" val="0" -->
<!--#endif -->
<!--#if expr="$external = yes" -->
  <!--#set var="showPTZBars" val="no" -->
  <!--#set var="useWithCam" val="no" -->
<!--#endif -->


<!--#set var="UseAudio" val="no" -->

<!--#if expr="$nbr = quad" -->
  <!--#set var="audiochannel" val="4" -->
<!--#else -->
  <!--#set var="audiochannel" val="$nbr" -->
<!--#endif -->
<!--#set var="audionbr" val="$(root_Audio_A$audiochannel$_Source)" -->
<!--#if expr="$audionbr = " -->
  <!--#set var="audionbr" val="0" -->
<!--#endif -->
<!--#include virtual="/sm/sm.srv?action=get&group=AudioSource.A$audionbr$.AudioSupport" -->
<!--#if expr="$(root_AudioSource_A$audionbr$_AudioSupport) = yes" -->

  <!--#if expr="_$audio != _" -->
    <!--#set var="UseAudio" val="$audio$" -->
  <!--#else -->

    <!--#if expr="$camnbr = 1" -->
      <!--#if expr="$root_Audio_A0_Enabled = yes" -->
        <!--#set var="UseAudio" val="yes" -->
      <!--#endif -->
    <!--#endif -->

  <!--#endif -->
<!--#endif -->


<!--#set var="irillumination" val="no" -->
<!--#if expr="$root_Properties_LightControl_LightControlAvailable = yes" -->
  <!--#if expr="$root_Layout_IRIlluminationEnabled = yes" -->
    <!--#set var="irillumination" val="yes" -->
  <!--#endif -->
<!--#endif -->

<!--#if expr="$root_Layout_Axis = no" -->
<style type="text/css">

.bodyBg         { background-color: <!--#if expr="$root_Layout_OwnBGColorEnabled = yes" --><!--#echo var="root_Layout_OwnBGColor" option="encoding:html" --><!--#else -->white<!--#endif --> }
.normalText     { color: <!--#if expr="$root_Layout_OwnTextColorEnabled = yes" --><!--#echo var="root_Layout_OwnTextColor" option="encoding:html" --><!--#else -->#000<!--#endif -->; font-family: verdana, arial, helvetica, san-serif; font-size: 10px; font-weight: normal }
.footnote       { color: <!--#if expr="$root_Layout_OwnTextColorEnabled = yes" --><!--#echo var="root_Layout_OwnTextColor" option="encoding:html" --><!--#else -->#000<!--#endif -->; font-family: verdana, arial, helvetica, san-serif; font-size: 10px; font-weight: normal }
.fixed_text     { color: <!--#if expr="$root_Layout_OwnTextColorEnabled = yes" --><!--#echo var="root_Layout_OwnTextColor" option="encoding:html" --><!--#else -->#000<!--#endif -->; font-family: courier new, courier, fixed; font-size: 12px; font-weight: normal }
.fixed_title    { color: <!--#if expr="$root_Layout_OwnTextColorEnabled = yes" --><!--#echo var="root_Layout_OwnTextColor" option="encoding:html" --><!--#else -->#000<!--#endif -->; font-family: courier new, courier, fixed; font-size: 12px; font-weight: normal }
.funcText       { color: <!--#if expr="$root_Layout_OwnTextColorEnabled = yes" --><!--#echo var="root_Layout_OwnTextColor" option="encoding:html" --><!--#else -->#666666<!--#endif -->; font-family: verdana, arial, helvetica, sans-serif; font-size: 10px; font-weight: normal }
.linkActive     { color: <!--#if expr="$root_Layout_OwnTextColorEnabled = yes" --><!--#echo var="root_Layout_OwnTextColor" option="encoding:html" --><!--#else -->#666666<!--#endif -->; font-family: verdana, arial, helvetica, sans-serif; font-size: 13px; font-weight: bold }
.linkInActive   { color: <!--#if expr="$root_Layout_OwnTextColorEnabled = yes" --><!--#echo var="root_Layout_OwnTextColor" option="encoding:html" --><!--#else -->#3366cc<!--#endif -->; font-family: verdana, arial, helvetica, sans-serif; font-size: 13px; font-weight: bold }

</style>


<!--#endif -->
<style type="text/css">
  #streamPlaceholder {
    position: relative;
    width: 480px;
    height: 270px;
    background-color: white;
    border: 1px solid #ccc;
  }
  #streamPlaceholder > .hint {
    position: absolute;
    height: 80px;
    top: 50%;
    margin-top: -40px;
    left: 0;
    right: 0;
    z-index: 2;
    text-align: center;
  }
  #streamPlaceholder > .hint > * {
    padding: 4px;
    margin: 0;
  }
  #streamPlaceholder > .hint > .header {
    font-size: 14px;
    font-weight: bold;
    margin-top: 10px;
    margin-bottom: 6px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
</style>

<!--#set var="includeSoapclient" val="no" -->
  <!--#set var="includeSoapclient" val="yes" -->
<!--#if expr="$includeSoapclient = yes" -->
  <script src="/incl/soapclient.js?ver=<!--#echo var="root_Properties_Firmware_Version" option="encoding:url" -->" language="javascript" type="text/javascript"></script>
<!--#endif -->

<script type="text/javascript" src= "/incl/slider.js?ver=<!--#echo var="root_Properties_Firmware_Version" option="encoding:url" -->"></script>

<!--#if expr="$irillumination = yes" -->
  <script type="text/javascript" src="/incl/ir_light_settings.js?ver=<!--#echo var="root_Properties_Firmware_Version" option="encoding:url" -->" language="javascript"></script>
<!--#endif -->

<script src="/js/sharedjs/CustomEventUtil.js?ver=<!--#echo var="root_Properties_Firmware_Version" option="encoding:url" -->"></script>



<!--#if expr="$root_PTZ_UserAdv_U1_WiperAvailable = true" -->
  <!--#set var="show_washer_or_wiper" val="true" -->
<!--#endif -->

<!--#if expr="$root_PTZ_UserAdv_U1_NozzlePosition = true" -->
  <!--#set var="show_washer_or_wiper" val="true" -->
<!--#endif -->

<!--#if expr="$show_washer_or_wiper = true" -->
  <script src="js/libs/spin/spin.min.js?ver=<!--#echo var="root_Properties_Firmware_Version" option="encoding:url" -->"></script>
<!--#endif -->

<script language="JavaScript">
<!--
var langObjView = new Language("platoon", "view");

var browser = "Netscape";
if (isBrowserIE()) {
  browser = "IE";
}

<!--#include virtual="/incl/functions.shtml" -->

  <!--#include virtual="/incl/profile_funcs.shtml" -->

function outputBox(title, elArr, spacerAfter, spacerBefore, fillWhole, otherOutputTr, id)
{
  var blankImage5x5 = document.createElement("img");
  blankImage5x5.src = "/pics/blank.gif";
  blankImage5x5.style.width = "5px";
  blankImage5x5.style.height = "5px";
  blankImage5x5.style.border = "0";

  var blankImage4x5 = document.createElement("img");
  blankImage4x5.src = "/pics/blank.gif";
  blankImage4x5.style.width = "4px";
  blankImage4x5.style.height = "5px";
  blankImage4x5.style.border = "0";

  var blankImage1x5 = document.createElement("img");
  blankImage1x5.src = "/pics/blank.gif";
  blankImage1x5.style.width = "1px";
  blankImage1x5.style.height = "5px";
  blankImage1x5.style.border = "0";

  var mainCell = document.createElement("td");

  if (id)
    mainCell.id = id;

  if(fillWhole == true)
    mainCell.style.width = "100%";

  var tbl1 = document.createElement("table");
  tbl1.style.width = "100%";
  tbl1.style.height = "46px";
  tbl1.cellPadding = "0";
  tbl1.cellSpacing = "0";
  tbl1.style.border = "0";

  var tbl1Tbody = document.createElement("tbody");

  var tbl1Row1 = document.createElement("tr");
  tbl1Row1.className="top-mainborder";

  var tbl1Row1Cell1 = document.createElement("td");
  tbl1Row1Cell1.colSpan = 2;
  tbl1Row1Cell1.style.width = "5px";
  tbl1Row1Cell1.style.backgroundImage = "url(\"/pics/gray_corner_lt_5x50px.gif\")";
  tbl1Row1Cell1.appendChild( blankImage5x5.cloneNode(false) );

  var tbl1Row1Cell2 = document.createElement("td");
  tbl1Row1Cell2.vAlign = "top";
  tbl1Row1Cell2.align = "center";
  tbl1Row1Cell2.style.width = "100%";
  tbl1Row1Cell2.style.height = "5px";
  tbl1Row1Cell2.className = "funcText";
  tbl1Row1Cell2.style.whiteSpace = "nowrap";
  tbl1Row1Cell2.style.backgroundImage = "url(\"/pics/gray_t_5x50px.gif\")";
  tbl1Row1Cell2.innerHTML = title;

  var tbl1Row1Cell3 = document.createElement("td");
  tbl1Row1Cell3.colSpan = 2;
  tbl1Row1Cell3.style.width = "5px";
  tbl1Row1Cell3.style.backgroundImage = "url(\"/pics/gray_corner_rt_5x50px.gif\")";
  tbl1Row1Cell3.appendChild( blankImage5x5.cloneNode(false) );

  var tbl1Row2 = document.createElement("tr");

  var tbl1Row2Cell1 = document.createElement("td");
  tbl1Row2Cell1.style.width = "1px";
  tbl1Row2Cell1.className = "lineBg";
  tbl1Row2Cell1.appendChild( blankImage1x5.cloneNode(false) );

  var tbl1Row2Cell2 = document.createElement("td");
  tbl1Row2Cell2.style.width = "4px";
  tbl1Row2Cell2.appendChild( blankImage4x5.cloneNode(false) );

  var tbl1Row2Cell3 = document.createElement("td");
  tbl1Row2Cell3.vAlign = "middle";
  tbl1Row2Cell3.align = "center";
  tbl1Row2Cell3.style.width = "100%";

  var tbl2 = document.createElement("table");
  tbl2.cellPadding = "0";
  tbl2.cellSpacing = "0";
  tbl2.style.border = "0";

  var tbl2Tbody = document.createElement("tbody");

  var tbl2Row1 = document.createElement("tr");

  var retEl;
  for(var i=0; i < elArr.length; i++)
  {
    retEl = null;

    if(elArr[i].type == "button")
    {
      retEl = getButtonForBox(elArr[i].pic, elArr[i].alt, elArr[i].url, elArr[i].name, elArr[i].pressed, elArr[i].onClick, elArr[i].width, elArr[i].height, elArr[i].id);
    }
    else if(elArr[i].type == "select")
    {
      retEl = getSelectForBox(elArr[i].name, elArr[i].onChange, elArr[i].disabled, elArr[i].optionArr, elArr[i].extraOptionArr, elArr[i].extraCode);
    }
    else if(elArr[i].type == "toggle")
    {
      retEl = getToggleForBox(
        elArr[i].nameActive,
        elArr[i].nameInactive,
        elArr[i].picActivePressed,
        elArr[i].picActive,
        elArr[i].picInactivePressed,
        elArr[i].picInactive,
        elArr[i].urlActive,
        elArr[i].urlInactive,
        elArr[i].initStatusActive,
        elArr[i].altActive,
        elArr[i].altInactive,
        elArr[i].displaySingleImage);
    }
    else if(elArr[i].type == "slider")
    {
      retEl = getSliderForBox(elArr[i].name, elArr[i].val, elArr[i].images);
    }
    else if(elArr[i].type == "inputOutput")
    {
      retEl = getInputOutputForBox(elArr[i].inNbr, elArr[i].outNbr);
    }
    else if(elArr[i].type == "trContainer")
    {
      retEl = getColumns(elArr[i].elements);
    }
    else if(elArr[i].type == "empty")
    {
      retEl = document.createElement("td");
      retEl.vAlign = "middle";
      retEl.align = "left";
      retEl.id = elArr[i].id;
      retEl.innerHTML = "<br>";
    }

    if(retEl != null)
    {
      if( retEl instanceof Array)
      {
        retEl.forEach(function(td)
        {
          tbl2Row1.appendChild(td);
        });
      }
      else
        tbl2Row1.appendChild( retEl );
    }
  }

  var tbl1Row2Cell4 = document.createElement("td");
  tbl1Row2Cell4.style.width = "4px";
  tbl1Row2Cell4.appendChild( blankImage4x5.cloneNode(false) );

  var tbl1Row2Cell5 = document.createElement("td");
  tbl1Row2Cell5.style.width = "1px";
  tbl1Row2Cell5.className = "lineBg";
  tbl1Row2Cell5.appendChild( blankImage1x5.cloneNode(false) );

  var tbl1Row3 = document.createElement("tr");
  tbl1Row3.className="bottom-mainborder";

  var tbl1Row3Cell1 = document.createElement("td");
  tbl1Row3Cell1.colSpan = 2;
  tbl1Row3Cell1.style.width = "5px";
  tbl1Row3Cell1.style.backgroundImage = "url(\"/pics/line_corner_lb_5x5px.gif\")";
  tbl1Row3Cell1.appendChild( blankImage5x5.cloneNode(false) );

  var tbl1Row3Cell2 = document.createElement("td");
  tbl1Row3Cell2.style.width = "100%";
  tbl1Row3Cell2.style.height = "5px";
  tbl1Row3Cell2.style.backgroundImage = "url(\"/pics/line_b_100x5px.gif\")";
  tbl1Row3Cell2.appendChild( blankImage1x5.cloneNode(false) );

  var tbl1Row3Cell3 = document.createElement("td");
  tbl1Row3Cell3.colSpan = 2;
  tbl1Row3Cell3.style.width = "5px";
  tbl1Row3Cell3.style.height = "5px";
  tbl1Row3Cell3.style.backgroundImage = "url(\"/pics/line_corner_rb_5x5px.gif\")";
  tbl1Row3Cell3.appendChild( blankImage5x5.cloneNode(false) );

  var spacerCell = document.createElement("td");
  spacerCell.style.width = "5px";
  spacerCell.appendChild( blankImage5x5.cloneNode(false) );


  //Append everything created
  tbl1Row1.appendChild( tbl1Row1Cell1 );
  tbl1Row1.appendChild( tbl1Row1Cell2 );
  tbl1Row1.appendChild( tbl1Row1Cell3 );

  tbl1Row2.appendChild( tbl1Row2Cell1 );
  tbl1Row2.appendChild( tbl1Row2Cell2 );

  tbl2Tbody.appendChild( tbl2Row1 );
  tbl2.appendChild( tbl2Tbody );
  tbl1Row2Cell3.appendChild( tbl2 );

  tbl1Row2.appendChild( tbl1Row2Cell3 );
  tbl1Row2.appendChild( tbl1Row2Cell4 );
  tbl1Row2.appendChild( tbl1Row2Cell5 );

  tbl1Row3.appendChild( tbl1Row3Cell1 );
  tbl1Row3.appendChild( tbl1Row3Cell2 );
  tbl1Row3.appendChild( tbl1Row3Cell3 );

  tbl1Tbody.appendChild( tbl1Row1 );
  tbl1Tbody.appendChild( tbl1Row2 );
  tbl1Tbody.appendChild( tbl1Row3 );

  tbl1.appendChild( tbl1Tbody );
  mainCell.appendChild( tbl1 );

  var appenderTr = "appendableTr";
  if(otherOutputTr != null)
    appenderTr = otherOutputTr;

  if(spacerBefore)
    document.getElementById(appenderTr).appendChild( spacerCell );

  document.getElementById(appenderTr).appendChild( mainCell );

  if(spacerAfter)
    document.getElementById(appenderTr).appendChild( spacerCell );
}

function getButtonForBox(pic, alt, url, name, pressed, onClick, width, height, id)
{
  var td = document.createElement("td");
  td.vAlign = "middle";
  td.align = "left";

  var a = document.createElement("a");
  var img = document.createElement("img");

  if(url)
  {
    a.href = url;

    if(onClick)
      a.onclick = new Function(onClick);

    if(name)
    {
      a.id = name+"_link";
      a.onmousedown = function() { movepic( name, pressed) };
      a.onmouseup = function() { movepic( name, pic) };
      img.name = name;
    }
    else
      a.target = "_self";
  }

  img.src = pic;
  if(width)
    img.style.width = width;
  else
    img.style.width = "27px";

  if(height)
    img.style.height = height;
  else
    img.style.height = "27px";

  img.border = "0";

  if(id)
    img.id = id;

  if(alt)
  {
    img.alt = alt;
    img.title = alt;
  }

  if(a.href)
  {
    a.appendChild( img );
    td.appendChild( a );
  }
  else
    td.appendChild( img );

  return td;
}

function getSelectForBox(name, onChange, disabled, optionArr, extraOptionArr, extraCode)
{
  var td = document.createElement("td");
  td.vAlign = "middle";
  td.align = "left";

  var select = document.createElement("select");
  select.name = name;
  select.id = name;
  if( select.addEventListener )
    select.addEventListener('change', onChange, false);
  else
    select.attachEvent('onchange', onChange);

  if(disabled)
    select.disabled = true;

  langObjView.addOptionsToList(select, optionArr);

  if(extraOptionArr)
    langObjView.addOptionsToList(select, extraOptionArr);

  td.appendChild( select );

  if(extraCode)
  {
    if( typeof( extraCode ) != "string" )
    {
      td.appendChild( extraCode );
    }
    else
    {
      td.innerHTML += extraCode;
    }
  }

  return td;
}

function getToggleForBox(nameActive, nameInactive, picActivePressed, picActive, picInactivePressed, picInactive, urlActive, urlInactive, initStatusActive, altActive, altInactive, displaySingleImage)
{
  var td = document.createElement("td");
  td.vAlign = "middle";
  td.align = "left";

  var a = document.createElement("a");
  a.id = nameActive+"_link";
  a.href = urlActive;
  a.onmousedown = function() { movepic( nameActive, picActivePressed); movepic( nameInactive, picInactive); };

  var img = document.createElement("img");
  img.name = nameActive;
  img.src = (initStatusActive ? picActivePressed : picActive);
  img.width = "27";
  img.height = "27";
  img.border = "0";
  img.alt = altActive;
  img.title = altActive;

  a.appendChild( img );

  var td1 = document.createElement("td");
  td1.vAlign = "middle";
  td1.align = "left";

  var a1 = document.createElement("a");
  a1.id = nameInactive+"_link";
  a1.href = urlInactive;
  a1.onmousedown = function() { movepic( nameActive, picActive); movepic( nameInactive, picInactivePressed); };

  img1 = document.createElement("img");
  img1.name = nameInactive;
  img1.src = (initStatusActive ? picInactivePressed : picInactive);
  img1.width = "27";
  img1.height = "27";
  img1.border = "0";
  img1.alt = altInactive;
  img1.title = altInactive;

  a1.appendChild( img1 );

  if(displaySingleImage)
  {
    a.setAttribute("onclick","javascript:toggleImage(this,true);");
    a1.setAttribute("onclick","javascript:toggleImage(this,false);");

    if(initStatusActive)
    {
      a.style.display = "none";
    }
    else
    {
      a1.style.display ="none";
    }

    td.appendChild(a);
    td.appendChild(a1);

    return td;
  }
  else
  {
    td.appendChild( a );
    td1 = document.createElement("td");
    td1.appendChild( a1 );

    var retArr = new Array();
    retArr.push( td );
    retArr.push( td1 );
    return retArr;
  }
}

function toggleImage(element, isActiveImage) {
  var parent = element.parentNode;

  if(isActiveImage)
  {
    parent.childNodes[0].style.display = "none";
    parent.childNodes[1].style.display = "";
  }
  else
  {
    parent.childNodes[0].style.display = "";
    parent.childNodes[1].style.display = "none";
  }
}

function getTimeStamp() {
  return "&timestamp=" + new Date().getTime();
};

function getColumns(elements) {
  var columns = [];
  elements.forEach(function(tdElements)
  {
    var td = document.createElement("td");
    td.vAlign = "middle";
    td.align = "left";

    tdElements.forEach(function(element) {
      td.appendChild(element);
    });

    columns.push(td);
  });

  return columns;
}

function switchElements(elementsToShowId, elementsToHideId) {
  setDisplay(elementsToShowId, "");
  setDisplay(elementsToHideId, "none");

  function setDisplay(elementIds, display) {
    if(elementIds instanceof Array) {
      elementIds.forEach(function(elementId)
      {
        document.getElementById(elementId).style.display = display;
      });
    }
    else {
      document.getElementById(elementIds).style.display = display;
    }
  }
}

function getSliderForBox(name, val, images)
{
  var td = document.createElement("td");
  td.vAlign = "middle";
  td.style.whiteSpace = "nowrap";

  var sliderImg;
  for(var j=0; j < images.length; j++)
  {
    sliderImg = document.createElement("img");
    sliderImg.id = images[j].id;
    sliderImg.src = images[j].src;
    sliderImg.style.width = images[j].width;
    sliderImg.style.height = images[j].height;
    sliderImg.style.display = "inline";

    td.appendChild( sliderImg );
  }

  td1 = document.createElement("td");

  var inp = document.createElement("input");
  inp.type = "hidden";
  inp.name = name;
  inp.id = name;
  inp.size = 4;
  inp.value = val;

  td1.appendChild( inp );

  var retArr = new Array();
  retArr.push( td );
  retArr.push( td1 );

  return retArr;
}

function getInputOutputForBox(inNbr, outNbr)
{
  var ioTable = document.createElement("table");
  ioTable.cellPadding = "0";
  ioTable.cellSpacing = "0";
  ioTable.style.border = "0";
  ioTable.style.width = "768px";

  var ioTableTbody = document.createElement("tbody");

  var ioTableRow1 = document.createElement("tr");

  var ioTableRow1Cell1 = document.createElement("td");
  ioTableRow1Cell1.vAlign = "middle";
  ioTableRow1Cell1.align = "left";
  ioTableRow1Cell1.style.width = "10%";
  ioTableRow1Cell1.style.whiteSpace = "nowrap";
  ioTableRow1Cell1.innerHTML = langObjView.getText("inpPortsTxt");

  ioTableRow1.appendChild( ioTableRow1Cell1 );

  var ioTableRow1Cell2X = document.createElement("td");
  ioTableRow1Cell2X.vAlign = "middle";
  ioTableRow1Cell2X.align = "center";
  ioTableRow1Cell2X.style.width = "10%";

  var inLoopMainTd;
  var inLoopTbl;
  var inLoopTbody;
  var inLoopTr1;
  var inLoopTr1Td;
  var inLoopTr1TdSpan;
  var inLoopTr2;
  var inLoopTr2Td;
  var inLoopTr2TdSpan;
  for(var i=0; i < inNbr; i++)
  {
    inLoopMainTd = ioTableRow1Cell2X.cloneNode(false);

    inLoopTbl = document.createElement("table");
    inLoopTbl.style.border = "0";
    inLoopTbody = document.createElement("tbody");

    inLoopTr1 = document.createElement("tr");
    inLoopTr1Td = document.createElement("td");
    inLoopTr1Td.align = "center";
    inLoopTr1TdSpan = document.createElement("span");
    inLoopTr1TdSpan.id = "inname"+i;
    inLoopTr2 = document.createElement("tr");
    inLoopTr2Td = document.createElement("td");
    inLoopTr2Td.align = "center";
    inLoopTr2Td.vAlign = "middle";
    inLoopTr2TdSpan = document.createElement("span");
    inLoopTr2TdSpan.id = "instat"+i;

    inLoopTr1Td.appendChild( inLoopTr1TdSpan );
    inLoopTr1.appendChild( inLoopTr1Td );

    inLoopTr2Td.appendChild( inLoopTr2TdSpan );
    inLoopTr2.appendChild( inLoopTr2Td );

    inLoopTbody.appendChild( inLoopTr1 );
    inLoopTbody.appendChild( inLoopTr2 );

    inLoopTbl.appendChild( inLoopTbody );
    inLoopMainTd.appendChild( inLoopTbl );

    ioTableRow1.appendChild( inLoopMainTd );
  }

  var ioTableRow2 = document.createElement("tr");

  var ioTableRow2Cell1 = ioTableRow1Cell1.cloneNode(false);
  ioTableRow2Cell1.innerHTML = langObjView.getText("outPortsTxt");

  ioTableRow2.appendChild( ioTableRow2Cell1 );

  var ioTableRow2Cell2X = ioTableRow1Cell2X.cloneNode(false);

  var outLoopMainTd;
  var outLoopTbl;
  var outLoopTbody;
  var outLoopTr1;
  var outLoopTr1Td;
  var outLoopTr1TdSpan;
  var outLoopTr2;
  var outLoopTr2Td;
  var outLoopTr2TdSpan1;
  var outLoopTr2TdSpan2;
  var outLoopTr2TdSpan3;
  for(var i=0; i < outNbr; i++)
  {
    outLoopMainTd = ioTableRow2Cell2X.cloneNode(false);

    outLoopTbl = document.createElement("table");
    outLoopTbl.style.border = "0";
    outLoopTbody = document.createElement("tbody");

    outLoopTr1 = document.createElement("tr");
    outLoopTr1Td = document.createElement("td");
    outLoopTr1Td.align = "center";
    outLoopTr1TdSpan = document.createElement("span");
    outLoopTr1TdSpan.id = "outname"+i;
    outLoopTr2 = document.createElement("tr");
    outLoopTr2Td = document.createElement("td");
    outLoopTr2Td.align = "center";
    outLoopTr2Td.vAlign = "middle";
    outLoopTr2TdSpan = document.createElement("span");
    outLoopTr2TdSpan1.id = "outon"+i;
    outLoopTr2TdSpan2 = document.createElement("span");
    outLoopTr2TdSpan2.id = "outpulse"+i;
    outLoopTr2TdSpan3 = document.createElement("span");
    outLoopTr2TdSpan3.id = "outoff"+i;


    outLoopTr1Td.appendChild( outLoopTr1TdSpan );
    outLoopTr1.appendChild( outLoopTr1Td );

    outLoopTr2Td.appendChild( outLoopTr2TdSpan1 );
    outLoopTr2Td.appendChild( outLoopTr2TdSpan2 );
    outLoopTr2Td.appendChild( outLoopTr2TdSpan3 );
    outLoopTr2.appendChild( outLoopTr2Td );

    outLoopTbody.appendChild( outLoopTr1 );
    outLoopTbody.appendChild( outLoopTr2 );

    outLoopTbl.appendChild( outLoopTbody );
    outLoopMainTd.appendChild( outLoopTbl );

    ioTableRow2.appendChild( outLoopMainTd );
  }

  //appendEverything created for input/output
  ioTableTbody.appendChild( ioTableRow1 );
  ioTableTbody.appendChild( ioTableRow2 );
  ioTable.appendChild( ioTableTbody );

  var td = document.createElement("td");
  td.appendChild( ioTable );

  return td;
}


// Draw the scale buttons
function drawScaleButtons()
{
  var currentResolution = 0
  var width = 0
  var height = 0
  var imagepath = decodeEncodingJavascript('<!--#echo var="imagepath" option="encoding:javascript" -->');
  var resStart = imagepath.indexOf("resolution=")
  if (resStart != -1) {
    var resStop = imagepath.indexOf("&", resStart)
    if (resStop == -1) resStop = imagepath.length
    currentResolution = imagepath.substring(resStart + 11, resStop);
    width = parseInt(currentResolution.substring(0, currentResolution.indexOf('x')), 10);
    height = parseInt(currentResolution.slice((currentResolution.indexOf('x') + 1)), 10);
  } else {
    width = "<!--#echo var="img_width" option="encoding:javascript" -->";
    height = "<!--#echo var="img_height" option="encoding:javascript" -->";
    currentResolution = width + 'x' + height;
  }

  if (currentResolution.indexOf("x") != -1) {
    var currentWidth  = parseInt(currentResolution.substring(0, currentResolution.indexOf("x")), 10),
        currentHeight = parseInt(currentResolution.slice((currentResolution.indexOf('x') + 1)), 10);
    if (!((currentWidth <= 800 && currentHeight <= 600) || (currentWidth <= 600 && currentHeight <= 800)))
    {
      scaleArr = new Array();
      scaleArr.push( {type: "button", pic: "/pics/button_downsize_gray_27x27px.gif", alt: langObjView.getText("adjToBrSizeTxt"), url: "JavaScript:dynamicResize(true)", id: "adjustSize"} );
      scaleArr.push( {type: "button", pic: "/pics/button_x1_gray_27x27px.gif", alt: langObjView.getText("fuImTxt"), url: "JavaScript:dynamicResize(false)", id: "fullSize"} );
      outputBox(langObjView.getText("viewSizeTxt"), scaleArr, true);
    }
  }
}

<!--#if expr="$showSizeButtons != no" -->
//draw the size buttons
function drawSizeButtons()
{
  var viewSizeArr = new Array();
<!--#if expr="$size = 0.5" -->
  viewSizeArr.push( {type: "button", pic: "/pics/button_x05_gray_27x27px.gif", alt: "x 1/2"} );
<!--#else -->
  viewSizeArr.push( {type: "button", pic: "/pics/button_x05_27x27px.gif", alt: "x 1/2", url: "JavaScript:zoom(0.5)"} );
<!--#endif -->
<!--#if expr="$size = 1" -->
  viewSizeArr.push( {type: "button", pic: "/pics/button_x1_gray_27x27px.gif", alt: "x 1"} );
<!--#else -->
  viewSizeArr.push( {type: "button", pic: "/pics/button_x1_27x27px.gif", alt: "x 1", url: "JavaScript:zoom(1)"} );
<!--#endif -->
<!--#if expr="$size = 2" -->
  viewSizeArr.push( {type: "button", pic: "/pics/button_x2_gray_27x27px.gif", alt: "x 2"} );
<!--#else -->
  viewSizeArr.push( {type: "button", pic: "/pics/button_x2_27x27px.gif", alt: "x 2", url: "JavaScript:zoom(2)"} );
<!--#endif -->
<!--#if expr="$size = 4" -->
  viewSizeArr.push( {type: "button", pic: "/pics/button_x4_gray_27x27px.gif", alt: "x 4"} );
<!--#else -->
  viewSizeArr.push( {type: "button", pic: "/pics/button_x4_27x27px.gif", alt: "x 4", url: "JavaScript:zoom(4)"} );
<!--#endif -->

  outputBox(langObjView.getText("viewSizeTxt"), viewSizeArr, true);
}
<!--#endif -->




  function newVideoFormat()
  {
    newVideoFormatCam('<!--#echo var="streamnbr" option="encoding:javascript" -->');
  }

  var supportedResolutionsObj = null;

  function getAllSupportedResolutions() {
    supportedResolutionsObj = new Object();
    var res  = decodeEncodingJavascript('<!--#echo var="root_Properties_Image_Resolution" option="encoding:javascript" -->');
    supportedResolutionsObj[1] = res.split(',');
}

function getSupportedResolution(name) {
  if (supportedResolutionsObj == null)
    getAllSupportedResolutions();

  if (supportedResolutionsObj[name]) {
    return supportedResolutionsObj[name];
  }
  return null;
}

  function newVideoFormatCam(cam)
  {
    var url = "";
    var options = "";
<!--#if expr="$root_Layout_ShowVideoFormatDropDown = yes" -->
    var selvalue = "#UNSELECTABLE#";
    var oVideoFormat = document.WizardForm.videoFormat;
    if( oVideoFormat && oVideoFormat.selectedIndex >= 0 )
    {
      selvalue = oVideoFormat[oVideoFormat.selectedIndex].value;
    }
<!--#else -->
    var defaultStreamProfile = getProfileGrp(document.profileForm,"<!--#echo var="root_Layout_DefaultStreamProfile" option="encoding:javascript" -->");
    var defaultVideoFormat = "<!--#echo var="root_Layout_DefaultVideoFormat" option="encoding:javascript" -->";
    var selvalue = ( defaultStreamProfile == "" ? defaultStreamProfile : defaultVideoFormat );
<!--#endif -->

    if( selvalue == "#UNSELECTABLE#")
    {
      return;
    }


    var selvalueLC = selvalue.toLowerCase();
    var hasMultipleSources = <!--#if expr="$root_ImageSource_NbrOfSources != 1" -->true<!--#else -->false<!--#endif -->;
    if (selvalueLC == "mjpeg")
    {
      url = '/mjpg/video.mjpg' + (hasMultipleSources ? '?camera='+cam : '');
    }
    else if (selvalueLC == "mpeg4")
    {
      url = '/axis-media/media.amp?videocodec=mpeg4' + (hasMultipleSources ? '&camera=' + cam : '');
    }
    else if (selvalueLC == "h264" ||
        selvalueLC == "hdtv")
    {
      url = '/axis-media/media.amp?videocodec=h264' + (hasMultipleSources ? '&camera=' + cam : '');
      if (selvalueLC == "hdtv")
      {
        var supportedResolutions = getSupportedResolution(cam);
        if (supportedResolutions.indexOf( "1920x1080" ) >= 0)
          url += '&resolution=1920x1080' +
                 '&videoformat-hdtv';
        else if(supportedResolutions.indexOf( "1280x720" ) >= 0)
          url += '&resolution=1280x720' +
                 '&videoformat-hdtv';
      }
    }
    else
    {
      var val = document.profileForm["root_StreamProfile_S" + selvalue + "_Name"].value;
      if (val) {
        options = "&streamprofile=" + val;
        val = profileParseOption(document.profileForm["root_StreamProfile_S" + selvalue + "_Parameters"].value,"audio");
        if (val == "1") {
          options += "&audio=yes";
        } else if (val == "0") {
          options += "&audio=no";
        }
      }

      var enc = profileParseOption(document.profileForm["root_StreamProfile_S" + selvalue + "_Parameters"].value,"videocodec");
      if ( enc === "" )
        enc = "<!--#echo var="root_Layout_DefaultVideoFormat" option="encoding:javascript" -->";
      if (enc == "jpeg" ||
          enc == "mjpeg") {
        url = '/mjpg/video.mjpg' + (hasMultipleSources ? '?camera='+cam : '');
      }  else if (enc == "mpeg4") {
        url = '/axis-media/media.amp?videocodec=mpeg4' + (hasMultipleSources ? '&camera=' + cam : '');
      }  else if (enc == "h264" ||
          enc == "hdtv") {
        url = '/axis-media/media.amp?videocodec=h264' + (hasMultipleSources ? '&camera=' + cam : '');
        if (selvalueLC == "hdtv")
        {
          var supportedResolutions = getSupportedResolution(cam);
          if (supportedResolutions.indexOf( "1920x1080" ) >= 0)
            url += '&resolution=1920x1080' +
                   '&videoformat-hdtv';
          else if (supportedResolutions.indexOf( "1280x720" ) >= 0)
            url += '&resolution=1280x720' +
                   '&videoformat-hdtv';
        }
      }
    }
    changeView(url, cam, '', '<!--#echo var="size" option="encoding:javascript" -->', options);
  }

<!--#if expr="$root_Layout_ShowVideoFormatDropDown = yes" -->
  <!--#if expr="$seq != yes" -->
    <!--#if expr="$external = no" -->

  // Draw the format drop down
  function writeFormatOptions()
  {
    var fmt = "<!--#echo var="selectedprofile" option="encoding:javascript" -->";
    var cam = '<!--#echo var="streamnbr" option="encoding:url" -->';
    var normOpArr = new Array();
    normOpArr.push( {val: "MJPEG", text: "Motion JPEG", selected: (fmt === "mjpeg+")} );
    normOpArr.push( {val: "H264", text: "H.264", selected: (fmt === "h264+")} );
    var supportedResolutions = getSupportedResolution(cam);
    if( supportedResolutions.indexOf( "1280x720" ) >= 0 ||
        supportedResolutions.indexOf( "1920x1080" ) >= 0 )
      normOpArr.push( {val: "hdtv", text: langObjView.getText("hdtvSelTxt"), selected: (fmt === "hdtv+")} );


    var profileform = document.profileForm;
    var extraOpArr = getProfileOptionsArray(profileform,fmt);

    var elArr = new Array();
    elArr.push( {type: "select", name: "videoFormat", onChange: newVideoFormat, optionArr: normOpArr, extraOptionArr: extraOpArr, disabled: false } );

    outputBox(langObjView.getText("strProTxt"), elArr, true);

 }

    <!--#endif -->// $external = no
  <!--#endif -->// $seq != yes
<!--#endif -->// $root_Layout_ShowVideoFormatDropDown = yes


<!--#if expr="_$root_ImageSource_I0_SceneProfile != _" -->
<!--#if expr="_$root_Layout_ShowSceneProfileSelector = _yes" -->

  // Draw the Scene profile selector
  function drawSceneProfileSelector()
  {
    <!--#if expr="_$root_TrafficWiz_Running = _1" -->
    var trafficWizRunning = true;
    <!--#else -->
    var trafficWizRunning = false;
    <!--#endif -->
    var timestamp = new Date().getTime();
    var url = "/axis-cgi/view/param.cgi" +
              "?action=listdefinitions&listformat=xmlschema" +
              "&group=root.ImageSource.I0.SceneProfile&timestamp=" + timestamp;

    var request = AxisConnectionFactory.createAjaxConnection(AxisConnection.msXml.v3);
    AxisConnectionFactory.sendSync(["GET", url], null, request);

    if (request.getReadyState() == 4) {
      if (request.getStatus() == 200) {
        var xml = request.getResponseXml();
        var preset = xml.getElementsByTagName("parameter")[0].getAttribute("value");

        var opArr = new Array();
        $.each(xml.getElementsByTagName("entry"), function (index, value) {
          var profileLabel = value.getAttribute("niceValue");
          if (profileLabel === "Traffic" && trafficWizRunning === false) {
            return;
          }
          var profile = value.getAttribute("value");
          opArr.push( {val: profile,
                       text: profileLabel,
                       selected: profile === preset} );
        });

        var elArr = new Array();
        elArr.push( {type: "select", name: "sceneprofile", onChange:
          function() {
            var select_element = document.getElementsByName("sceneprofile")[0];
            if (select_element.selectedIndex >= 0) {
              var option = select_element.options[select_element.selectedIndex];
              var url = '/axis-cgi/param.cgi?action=update&' +
                        'root.ImageSource.I0.SceneProfile=' + option.value;
              AxisConnectionFactory.sendAsync(["GET", url], null);
            }
          }, optionArr: opArr } );

        outputBox(langObjView.getText("shSPTxt"), elArr, true);
        langObjView.translateOptionsInList(document.getElementsByName("sceneprofile")[0],
          [{val: "profile0", text: langObjView.getText("shSPForensicTxt")},
           {val: "profile1", text: langObjView.getText("shSPLiveTxt")},
           {val: "profile2", text: langObjView.getText("shSPTrafficTxt")}]);
      }
    }
  }
<!--#endif -->
<!--#endif -->



  function light_slider_onChange(name)
  {
    if (name.substr(0, 10) == 'lightlevel')
    {
      var submitform = document.getElementById('form'+name);
      if (submitform)
      {
        input = document.getElementById(name);
        submitform.level.value = input.value;
        submitform.submit();
      }
    }
    <!--#if expr="$irillumination = yes" -->
      else if (name == 'ir')
      {
        resetIrUpdate();

        ir_updateTimer["last_change"] = new Date();

        var value = document.getElementById(name).value;
        setLightParam( "SetManualIntensity", ir_LightID, "Intensity", value, true );
      }
    <!--#endif -->
  }

<!--#if expr="$root_Output_NbrOfOutputs != 0" -->

  var ioPortValues = AxisConnectionFactory.createAjaxConnection();
  var ioPortDirections = AxisConnectionFactory.createAjaxConnection();

  function requestIOPortStates()
  {
    var check = "/axis-cgi/io/port.cgi?check=";
    var checkdirection = "/axis-cgi/io/port.cgi?checkdirection=";
    var numberOfPorts = (<!--#echo var="root_Input_NbrOfInputs" option="encoding:javascript" -->+<!--#echo var="root_Output_NbrOfOutputs" option="encoding:javascript" -->);

    for (var i=1; i<=numberOfPorts; i++)
    {
      check += i;
      checkdirection += i;
      if (i != numberOfPorts) {
        check += ",";
        checkdirection += ",";
      }
    }

    AxisConnectionFactory.sendAsync(["GET", check + "&rand=" + Math.random()], null, drawOutputButtons, ioPortValues);
    AxisConnectionFactory.sendAsync(["GET", checkdirection + "&rand=" + Math.random()], null, drawOutputButtons, ioPortDirections);
  }

  // Draw the output buttons
  function drawOutputButtons()
  {
    var form = document.outputsForm;

    if(ioPortValues.getReadyState() == 4 && ioPortDirections.getReadyState() == 4)
    {
      var txt_values = ioPortValues.getResponseText();
      var txt_directions = ioPortDirections.getResponseText();
      var OutputName = "";
      var unit = "";
      var value = 0;
      var displayValue = 0.0;
      var IO_Status = new Array(2);
      var outputs = "";
      var inputs = "";

      for (var i=0; i<=(<!--#echo var="root_Input_NbrOfInputs" option="encoding:javascript" -->+<!--#echo var="root_Output_NbrOfOutputs" option="encoding:javascript" -->); i++)
      {
        if (txt_directions.indexOf('port'+ (i+1) + '=input') != -1) {
          inputs += (txt_values.indexOf('port'+ (i+1) + '=1') != -1)?"1":"0";
        } else if (txt_directions.indexOf('port'+ (i+1) + '=output') != -1) {
          outputs += (txt_values.indexOf('port'+ (i+1) + '=1') != -1)?"1":"0";
        } else {
          i = 8;
        }
      }


      IO_Status[0] = "output";
      IO_Status[1] = "output";
      var IOStateO = outputs;

      for (k = 0; k < (<!--#echo var="root_Output_NbrOfOutputs" option="encoding:javascript" -->+<!--#echo var="root_Input_NbrOfInputs" option="encoding:javascript" -->); k++)
      {
        if( IO_Status[k] == "output" && form["root_IOPort_I" + k + "_Output_Name"] ) {
          try {
            var OutputName = form["root_IOPort_I" + k + "_Output_Name"].value;
            var unit = form["root_IOPort_I" + k + "_Output_PulseTime"].value;
            var buttontype = form["root_IOPort_I" + k + "_Output_Button"].value;

            for (j = unit.length-1; j >= 0; j--) {
              if (unit.charAt(j) == "h") {
                var value = parseInt(unit, 10) * 10;
                var displayValue = parseFloat(unit)/100;
                break;
              } else if (unit.charAt(j) == "s") {
                var value = parseInt(unit, 10) * 1000;
                var displayValue = parseInt(unit, 10);
                break;
              }
            }

            if (buttontype != "none")
            {
              var elArr = new Array();

              if (buttontype == "actinact")
              {
                var initStatus = false;
                if ((IOStateO.charAt(k) == '1' && form["root_IOPort_I" + k + "_Output_Active"].value == "closed") ||
                    (IOStateO.charAt(k) == '0' && form["root_IOPort_I" + k + "_Output_Active"].value == "open") == true)
                {
                  initStatus = true;
                }

                elArr.push({
                  type: "toggle",
                  name: OutputName,
                  nameActive: "buttonOn0" + k,
                  nameInactive: "buttonOff0" + k,
                  picActivePressed: "/pics/on_blue_pressed_button_27x27px.gif",
                  picActive: "/pics/on_blue_button_27x27px.gif",
                  picInactivePressed: "/pics/off_blue_pressed_button_27x27px.gif",
                  picInactive: "/pics/off_blue_button_27x27px.gif",
                  urlActive: "JavaScript:triggerActInactButton(true, " + [k + 1] + ")",
                  urlInactive: "JavaScript:triggerActInactButton(false, " + [k + 1] + ")",
                  initStatusActive: initStatus,
                  altActive: langObjView.getText("actTxt")+" "+ [OutputName],
                  altInactive: langObjView.getText("inaTxt")+" "+ [OutputName]
                });

              }
              else if (buttontype == "pulse")
              {
                elArr.push({
                  type: "button",
                  pic: "/pics/pulse_blue_button_27x27px.gif",
                  alt: langObjView.getText("pls1Txt")+" " + [OutputName] + " "+langObjView.getText("pls2Txt")+" " + [displayValue] + " "+langObjView.getText("pls3Txt"),
                  url: "JavaScript:triggerPulseButton("+ [k+1] + ", "+ value +")",
                  name: "PulseOff0" + [k],
                  pressed: "/pics/pulse_blue_button_pressed_27x27px.gif"
                });
              }
              outputBox(OutputName, elArr, true);
            }
          }
          catch(e) {}
        }
      }
    }
  }
<!--#endif -->

<!--#if expr="$(root_AudioSource_A$audionbr$_AudioSupport) = yes" -->
  <!--#if expr="$root_Layout_PlayAudioClipEnabled = yes" -->
  // Draw the AudioClip selector and Play button
  function drawAudioClip()
  {
    function populateAudioClip(clipArray)
    {
      if (clipArray) {
        var clipName, clipNrArr;
        var reClipNr = /root_Mediaclip_M(\d+)_Name/i;
        var newClipArray = [];
        for(var param in clipArray) {
          clipNrArr = reClipNr.exec(param);
          if(!clipNrArr || clipNrArr.length < 2)
            continue;
          clipName = clipArray[param];
          newClipArray.push({clipNr:clipNrArr[1], clipName:clipName});
        }

        var op;
        var elAudioClip = document.getElementById("audioclip");
        newClipArray = newClipArray.sort(sortClipName);
        for(var i=0; i < newClipArray.length; i++) {
          op = document.createElement("option");
          op.value = newClipArray[i].clipNr;
          op.text = newClipArray[i].clipName;
          elAudioClip.options.add( op );
        }
      }
    }
    getParamsAsUTF8("root.Mediaclip.*.Name", populateAudioClip);

    var opArr = [{val: "", text: "----------"}];

    var elArr = [];
    elArr.push( {type: "select", name: "audioclip", optionArr: opArr } );
    elArr.push( {type: "button", pic: "/pics/play_blue_button_27x27px.gif",
                        alt: langObjView.getText("plAuTxt"),
                        url: "#",
                        name: null,
                        pressed: "/pics/play_blue_button_27x27px.gif",
                        onClick: "playclip()" } );

    outputBox(langObjView.getText("auClipTxt"), elArr, true);
  }


  function sortClipName(a, b)
  {
    var x = a.clipName.toLowerCase();
    var y = b.clipName.toLowerCase();
    return ((x < y) ? -1 : ((x > y) ? 1 : 0));
  }
  <!--#endif -->
<!--#endif -->




  function addSelectOption(selectEl, nodeValue, nodeText, isSelected, cls, beforeIndex) {
    var op = document.createElement("option");
    op.value = nodeValue;
    op.text = nodeText;
    op.selected = isSelected;

    if (cls) {
      op.className = cls;
    }

    if (beforeIndex && beforeIndex < selectEl.length) {
      selectEl.options.add(op, beforeIndex);
    } else {
      selectEl.options.add(op);
    }
  }

  function clearSelect(el, keepFirst) {
    var removeTo = ((keepFirst)?1:0);

    while(el.length > removeTo) {
      el.remove( removeTo );
    }
  }


  // Draw the sequence buttons and the list of sources
  var showSourceList = true;
  function drawSequenceButtons()
  {
<!--#if expr="$root_PTZ_ImageSource_I0_PTZEnabled != false" -->
      var formCrop = document.listFormCrop;
      var nrSources = 0;
      var nrLocked = 0;
      var noSourceList = false;
      for (var i = 0; i < 1; i++)
      {
        if( formCrop['root_Image_I' + i + '_Enabled'].value == 'yes' )
        {
          nrSources++;
          if( formCrop['root_PTZ_Various_V' + (i+1) + '_Locked'].value == 'true' )
            nrLocked++;
        }
      }
      if (nrSources == 1 && nrLocked == 1)
        showSourceList = false;
<!--#endif -->

    var boxTitle;
    var elArr = new Array();

    if (showSourceList && (<!--#echo var="root_ImageSource_NbrOfSources" option="encoding:javascript" --> > 1
        || document.listFormExt.elements.length > 0
<!--#if expr="$ptzpresets = yes" -->
  <!--#if expr="$root_PTZ_ImageSource_I0_PTZEnabled != false" -->
        || document.listFormPreset.elements.length > 0
  <!--#endif -->
<!--#endif -->))
    {
<!--#if expr="$root_PTZ_ImageSource_I0_PTZEnabled != false" -->
      boxTitle = langObjView.getText("souTxt");
<!--#else -->
      boxTitle = "<br>";
<!--#endif -->
    } else {
      boxTitle = "<br>";
    }

    if ((("<!--#echo var="glob_PTZCamera" option="encoding:javascript" -->" != "yes") || ("<!--#echo var="ptzaccess" option="encoding:javascript" -->" == "yes")) && (seq_sources > 1))
    {
<!--#if expr="$seq = yes" -->
      elArr.push( {type: "button", pic: "/pics/button_sequence_gray_27x27px.gif", alt: langObjView.getText("seqModRunTxt") } );
      elArr.push( {type: "button", pic: "/pics/button_one_27x27px.gif", alt: langObjView.getText("stopSeqModTxt"), url: "JavaScript:sequence()" } );
<!--#else -->
      elArr.push( {type: "button", pic: "/pics/button_sequence_27x27px.gif", alt: langObjView.getText("viewSeqModTxt"), url: "JavaScript:sequence()" } );
      elArr.push( {type: "button", pic: "/pics/button_one_27x27px.gif", alt: langObjView.getText("segModeStopTxt") } );
<!--#endif -->
    }
    else
      elArr.push( {type: "button", pic: "/pics/space.gif", width: "1px" } );

<!--#set var="showSourceList" val="yes" -->
<!--#if expr="$glob_PTZCamera = yes" -->
  <!--#if expr="$root_ImageSource_I0_Video_Connector = bnc" -->
    <!--#set var="showSourceList" val="no" -->
  <!--#endif -->
<!--#endif -->
<!--#if expr="$showSourceList = yes" -->
  <!--#if expr="$root_PTZ_ImageSource_I0_PTZEnabled != false" -->

    if (showSourceList) {
      var listVidEl = {type: "select", name: "videoList", onChange: function() {}, optionArr: [{val: "loading", text: ""}], disabled: true};
      elArr.push(listVidEl);
    } else {
      elArr.push({type: "empty"});
    }
  <!--#else -->
    elArr.push({type: "empty"});
  <!--#endif -->
<!--#endif -->

    outputBox(boxTitle, elArr, false, false, true);
  }

  // Draw the trigger buttons
  function drawTriggerButtons()
  {
<!--#if expr="$root_ImageSource_NbrOfSources = 1" -->
    addTriggerButtons(langObjView.getText("triTxt"), 0);
<!--#else -->

    var indx = getTriggerIndex();

    if( indx >= 0 && indx < <!--#echo var="root_ImageSource_NbrOfSources" option="encoding:javascript" --> )
    {
      addTriggerButtons(langObjView.getText("triTxt")+" "+ (indx + 1), indx);
    }
<!--#endif -->
  }

  function addTriggerButtons(button_name, indx)
  {
    if (document.WizardForm["root_Layout_Trigger_T" + indx + "_Enabled"].value != "yes")
      return;

    var elArr = new Array();
    elArr.push( {type: "button", pic: "/pics/on_blue_button_27x27px.gif",
                        alt: button_name +" "+langObjView.getText("onTxt"),
                        url:  "JavaScript:triggerManualButton(true, "+indx+")",
                        name: "buttonOn",
                        pressed: "/pics/on_blue_pressed_button_27x27px.gif" } );
    elArr.push( {type: "button", pic: "/pics/off_blue_button_27x27px.gif",
                        alt: button_name +" "+langObjView.getText("offTxt"),
                        url:  "JavaScript:triggerManualButton(false, "+indx+")",
                        name: "buttonOff",
                        pressed: "/pics/off_blue_pressed_button_27x27px.gif" } );

    outputBox(button_name, elArr, false, true);
  }

  function triggerManualButton(activate, indx) {
    var activateStatus = !!activate ? "/" : "%5C";
    var cgiUrl = "/axis-cgi/io/virtualinput.cgi?action=" + [indx + 6] + ":"+activateStatus;
    AxisConnectionFactory.sendAsync(["GET", cgiUrl], (new Date()).getTime(), null, null);
  }

  function triggerPulseButton(indx, indx2) {
    var cgiUrl = "/axis-cgi/io/port.cgi?action=" + indx + ":/" + indx2 + "%5C";
    AxisConnectionFactory.sendAsync(["GET", cgiUrl], (new Date()).getTime(), null, null);
  }

  function triggerActInactButton(activate, indx) {
    var activateStatus = !!activate ? "/" : "%5C";
    var cgiUrl = "/axis-cgi/io/port.cgi?action=" + indx + ":"+activateStatus;
    AxisConnectionFactory.sendAsync(["GET", cgiUrl], (new Date()).getTime(), null, null);
  }

  function triggerCustomCgi(linkId) {
    var cgiUrl = document.getElementById(linkId).getAttribute('customlink');
    cgiUrl = decodeURI(cgiUrl);

    try {
      var url = cgiUrl.split('?'),
      data = {},
      arguments = [],
      arg;

      if(url.length > 1) {
        arguments = url[1].split("&");
      }

      $.each(arguments, function(index, argument) {
        arg = argument.split("=");
        data[arg[0]] = arg.length > 1 ? arg[1] : "";
      });

      $.get(url[0], data);
    }
    catch(e) {
    }
 }

  function getTriggerIndex() {
    var triggerIndex = 0;
    var camnbr = '<!--#echo var="camnbr" option="encoding:javascript" -->';
    var triggerIndex = parseInt(camnbr, 10);
    if( !isNaN(triggerIndex) ) {
      triggerIndex--;
    }
    else {
      triggerIndex = 0;
    }

    return triggerIndex;
  }

<!--#if expr="$root_Properties_TemperatureSensor_Fan = yes" -->
  <!--#if expr="$root_Layout_FanEnabled = yes" -->
  // Draw the fan button
  function drawFanButton()
  {
    var elArr = new Array();
    elArr.push( {type: "button", pic: "/pics/button_fan_27x27px.gif",
                        alt: langObjView.getText("fanManDurTxt"),
                        url: "javaScript:startTemperatureControlForFan()"} );

    outputBox( langObjView.getText("fanTxt"), elArr, false, true);
  }

  function startTemperatureControlForFan()
  {
    <!--#if expr="$root_TemperatureControl_Fan_F0_UserControlSupport != no" -->
      startTemperatureControl("fan", 0);
    <!--#endif -->
  }
  <!--#endif -->
<!--#endif -->

<!--#if expr="$root_Properties_TemperatureSensor_Heater = yes" -->
  <!--#if expr="$root_Layout_HeaterEnabled = yes" -->
  // Draw the heater button
  function drawHeaterButton()
  {
    var elArr = new Array();
    elArr.push( {type: "button", pic: "/pics/button_heater_27x27px.gif",
                        alt: langObjView.getText("heaterManDurTxt"),
                        url: "javaScript:startTemperatureControlForHeater()"} );

    outputBox(langObjView.getText("heaterTxt"), elArr, false, true);
  }

  function startTemperatureControlForHeater()
  {
    <!--#if expr="$root_TemperatureControl_Heater_H0_UserControlSupport != no" -->
      startTemperatureControl("heater", 0);
    <!--#endif -->
  }
  <!--#endif -->
<!--#endif -->






<!--#if expr="$root_PTZ_UserAdv_U1_WiperAvailable = true" -->


  var wiper = null;
  function drawWiperButton() {

    wiper = new Wiper();
    var wiperOnElement = getHtmlElement(
      "a",
      {
        'id': "startWiper",
        'title': langObjView.getText("startWiper"),
        'style': 'position: relative; width: 27px; height: 27px; cursor: pointer'
      },
      [ getHtmlElement(
          "img",
          { 'src': '/pics/button_on_27x27px.gif' })
      ]);

    $(wiperOnElement).click(function() {
      wiper.startWiper(true);
    });

    var wiperInactiveOnElement = getHtmlElement(
      "a",
      { "id": "startWiperInactive",
        "title": langObjView.getText("washInProgress"),
        "style": "position: relative; width: 27px; height: 27px; display: none"
      },
      [ getHtmlElement(
          "img",
          { "src": "/pics/button_on_gray_27x27px.gif" })]
      );

    var wiperOffElement = getHtmlElement(
      "a",
      { "id": "stopWiper",
        "title": langObjView.getText("stopWiper"),
        "style": "display:none; position: relative; width: 27px; height: 27px; cursor: pointer;"
      },
      [ getHtmlElement(
          "img",
          { "src": "/pics/button_off_27x27px.gif" })
      ]);

    $(wiperOffElement).click(function() {
      wiper.startWiper(false);
    });

    var activePlayElement = getHtmlElement(
      "a",
      {
        "id": "startTimedWiper",
        "title": langObjView.getText("startWiperSequence"),
        "style": "position: relative; width: 27px; height: 27px; cursor: pointer"
      },
      [ getHtmlElement(
          "img",
          { "src": "/pics/play_blue_button_27x27px.gif" })
      ]);

    $(activePlayElement).click(function() {
      wiper.startWiperSequence();
    });

    var inActivePlayElement = getHtmlElement(
      "a",
      { "id": "inactiveStartTimedWiper",
        "title": langObjView.getText("inactiveWiper"),
        "style": "position: relative; width: 27px; height: 27px; display: none;" },
      [ getHtmlElement(
          "img",
          { "src": "/pics/play_grey_button_27x27px.gif" })
      ]);

    var wiperSpinnerElement = getHtmlElement(
      "div",
      { "id": "wiperSpinner",
        "title": getWiperSequenceButtonTitle(),
        "onclick": "startWiperSequence();",
        "style": "position: relative; width: 27px; height: 27px; cursor: pointer; display: none;"});

    $(wiperSpinnerElement).click(function() {
      wiper.startWiperSequence();
    });

    var trContainer =
    {
      type: "trContainer",
      elements: [[wiperOnElement, wiperInactiveOnElement, wiperOffElement],
                 [activePlayElement, inActivePlayElement, wiperSpinnerElement]]
    };

    outputBox(langObjView.getText("viewWiper"), [trContainer], true, false, null, null, "wiper_mode_controls");

    function getWiperSequenceButtonTitle() {
      return langObjView.getText("addWiperSequence", {
        seconds: "<!--#echo var="root_PTZ_UserAdv_U1_WiperDwellTime" option="encoding:javascript" -->" } );
      }
    }

  var Wiper = function() {
    var wiperTimer = null;
    var wiperTimerSpinner = null;
    var load = new LoadHandler("wiperSpinner");

    this.startWiper = function(start) {
      if(wiperTimer != null) {
        cancelTimedEvent(wiperTimer, null);
      }

      if(start) {
        switchElements("inactiveStartTimedWiper", ["startTimedWiper", "wiperSpinner"]);
        switchElements("stopWiper", "startWiper");

        wiperTimer = startTimer(
          wiperTimer,
          110000,
          function() {
            startWiper(false);
          });
      }
      else {
        switchElements("startTimedWiper", "inactiveStartTimedWiper");
        switchElements("startWiper", "stopWiper");
      }

      SendWiperRequest((start ? "On" : "Off"));
    }

    this.startWiperSequence = function() {
      var wiperTime = parseInt("<!--#echo var="root_PTZ_UserAdv_U1_WiperDwellTime" option="encoding:javascript" -->", 10)*1000;
      load.startSpinner();
      switchElements("wiperSpinner", "startTimedWiper");

      wiperTimer = startTimer(
        wiperTimer,
        wiperTime,
        function() {
          load.stopSpinner(wiperTimer);
          switchElements("startTimedWiper", "wiperSpinner");
        });

      SendWiperRequest("Timed");
    }

    this.cancelWiper = function() {
      cancelTimedEvent(wiperTimer, wiperTimerSpinner);
    }

    function SendWiperRequest(arguments) {
      var url = "/axis-cgi/com/ptz.cgi?auxiliary=tt:Wiper|" + arguments + getTimeStamp();
      var connection = AxisConnectionFactory.createAjaxConnection();
      AxisConnectionFactory.sendAsync(["GET", url ], null, function() {
          parseResponse(connection);
        }, connection);

      function parseResponse(response) {
        if (response.getReadyState() != 4) {
          return;
        }
        if(response.getStatus() != 204) {
          alert(langObjView.getText("wiperError"));
          return;
        }
      }
    }
  }

  function cancelTimedEvent(timer, spinner) {
    if(timer != null) {
      window.clearTimeout(timer);
      timer = null;
    }
    if(spinner != null) {
      window.clearTimeout(timer);
      spinner.stop();
      spinner = null;
    }
  }

<!--#endif -->

<!--#if expr="$show_washer_or_wiper = true" -->

  function startTimer(timer, time, timeoutFunction) {
    if (timer != null) {
      window.clearTimeout(timer);
    }

    timer = setTimeout(
      timeoutFunction,
      time);

    return timer;
  }

  var LoadHandler = function(spinnerDivId) {

    var divId = spinnerDivId;
    var spinner = new Spinner({
      lines: 12,
      length: 5,
      width: 2,
      radius: 5
    });

    this.startSpinner = function() {
      spinner.spin(document.getElementById(divId));
    }

    this.stopSpinner = function(timer) {
      spinner.stop();
      window.clearTimeout(timer);
    }
  }
<!--#endif -->

<!--#if expr="$root_PTZ_UserAdv_U1_NozzlePosition = true" -->
  function drawWasherButton() {

    var washer = new Washer();

    var washerStartElement = getHtmlElement(
      "a",
      { "id": "startWash",
        "title": langObjView.getText("startWash"),
        "style": "position: relative; width: 27px; height: 27px; cursor: pointer;"
      },
      [ getHtmlElement(
          "img",
          { "src": "/pics/play_blue_button_27x27px.gif"})
      ]);

    $(washerStartElement).click(function() {
      washer.startWash();
    });

    var washSpinnerElement = getHtmlElement(
      "div",
      { "id": "washSpinner",
        "title": langObjView.getText("washInProgress"),
        "style": "position: relative; width: 27px; height: 27px; display: none;"
      });

    var trContainer = {
      type: "trContainer",
      elements: [[washerStartElement, washSpinnerElement]]
    };

    outputBox(langObjView.getText("viewWasher"), [trContainer], true, false, null, null, "washer_mode_controls");
  }

  var Washer = function() {
    var washLoad = new LoadHandler("washSpinner");
    var washTimer = null;

    this.startWash = function() {
      washLoad.startSpinner();
      <!--#if expr="$root_PTZ_UserAdv_U1_WiperAvailable = true" -->

      wiper.cancelWiper();

      switchElements(
        ["washSpinner", "startWiperInactive", "inactiveStartTimedWiper"],
        ["startWiper", "startTimedWiper", "startWash", "stopWiper", "wiperSpinner"]);

      <!--#else -->
      switchElements(
        ["washSpinner"],
        ["startWash"]);
      <!--#endif -->

      washTimer = startTimer(
        washTimer,
        30000,
        function() {
          washLoad.stopSpinner(washTimer);
          <!--#if expr="$root_PTZ_UserAdv_U1_WiperAvailable = true" -->
          switchElements(
            ["startWiper", "startTimedWiper", "startWash"],
            ["washSpinner", "startWiperInactive", "inactiveStartTimedWiper"]);
          <!--#else -->
          switchElements(
            ["startWash"],
            ["washSpinner"]);
          <!--#endif -->
      });

      SendWasherRequest();
    }

    function SendWasherRequest() {
      var url = "/axis-cgi/com/ptz.cgi?auxiliary=tt:WashingProcedure" + getTimeStamp();
      var connection = AxisConnectionFactory.createAjaxConnection();
      AxisConnectionFactory.sendAsync(["GET", url ], null, function() {
          parseResponse(connection);
        }, connection);

      function parseResponse(response) {
        if (response.getReadyState() != 4) {
          return;
        }

        if(response.getStatus() != 204) {
          alert(langObjView.getText("washError"));
          return;
        }
      }
    }
  }

<!--#endif -->

<!--#if expr="$irillumination = yes" -->
function drawIrControls() {
  var elArr = new Array();
  elArr.push({ type: "toggle",
               nameActive: "ir_activate",
               nameInactive: "ir_deactivate",
               picActivePressed: "/pics/on_blue_pressed_button_27x27px.gif",
               picActive: "/pics/on_blue_button_27x27px.gif",
               picInactivePressed: "/pics/off_blue_pressed_button_27x27px.gif",
               picInactive: "/pics/off_blue_button_27x27px.gif",
               urlActive: "javascript:activate_ir_illumination(true);",
               urlInactive: "javascript:activate_ir_illumination(false);",
               initStatusActive: false,
               altActive: langObjView.getText("viewActivateIr"),
               altInactive: langObjView.getText("viewDectivateIr"),
             });

  elArr.push({ type: "slider",
               name: "ir",
               value: 50,
               images: [ { id: "ir-bg",
                           src: "/pics/slider_bg_60x14px.gif",
                           width: "60px",
                           height: "14px" },
                         { id: "ir-handle",
                           src: "/pics/slider_handle.gif",
                           width: "5px",
                           height: "14px" }]
             });

  outputBox(langObjView.getText("viewIrTxt"),
            elArr, false, true, null, null, "ir_illumination_controls");

  document.getElementById('ir-handle').style.display = "none";
  document.getElementById('ir-handle').style.position = "absolute";
  document.getElementById('ir_illumination_controls').style.display = "none";
}

  var irSlider = null;
  var ir_LightID;
  var ir_updateTimer = new Array();

  function initIrControls()
  {
    ir_updateTimer["last_poll"] = 0;
    ir_updateTimer["last_change"] = 0;

    getLightParams("GetLightInformation", false, "info", ["LightInfo", "LightInformation"], true, getIrSliderValues);
  }

  function getIrSliderValues()
  {
    ir_LightID = ir["info"]["LightID"];
    ir["status"] = ir["info"]["LightState"];

    ir_updateTimer["last_poll"] = new Date();
    setTimeout(function()
    {
      getLightParams( "GetManualIntensity", ir_LightID, "manual_intensity", ["Intensity"], true, showIrControls );
    }, 0);
    setTimeout(function()
    {
      getLightParams( "GetValidIntensity", ir_LightID, "valid_intensity", ["RangeList", "IntRange"], true, showIrControls );
    }, 150);
  }

  function updateIrControls()
  {
    try
    {
      initIrSlider();
    }
    catch (e)
    {
      document.getElementById('ir-handle').style.display = "none";
    }

    if ( !ir_LightID )
    {
      return;
    }

    if ( ir )
    {
      ir["status"] = undefined;
      ir["manual_intensity"] = undefined;
      ir["valid_intensity"] = undefined;
    }

    ir_updateTimer["last_poll"] = new Date();
    setTimeout(function()
    {
      getLightParams("GetLightStatus", ir_LightID, "status", ["Status"], true, showIrControls);
    }, 0);
    setTimeout(function()
    {
      getLightParams( "GetManualIntensity", ir_LightID, "manual_intensity", ["Intensity"], true, showIrControls );
    }, 150);
    setTimeout(function()
    {
      getLightParams( "GetValidIntensity", ir_LightID, "valid_intensity", ["RangeList", "IntRange"], true, showIrControls );
    }, 300);
  }

  function resetIrUpdate()
  {
    if ( typeof ir_updateTimer["id"] != 'undefined')
      clearTimeout(ir_updateTimer["id"]);

    ir_updateTimer["id"] = setTimeout(updateIrControls, 10000);
  }

  function showIrControls()
  {
    if ( typeof ir["status"] == 'undefined' ||
         typeof ir["valid_intensity"] == 'undefined' ||
         typeof ir["manual_intensity"] == 'undefined' )
    {
      return;
    }
    if ( ir_updateTimer["last_change"] > ir_updateTimer["last_poll"] )
    {
      return;
    }
    var active = ( ir["status"] == "true" );
    set_ir_pictures(active);
    document.getElementById('ir_illumination_controls').style.display = "";
    initIrSlider();
    resetIrUpdate();
  }

  function initIrSlider()
  {
    irSlider = new Slider('ir', ir["valid_intensity"].Low, ir["valid_intensity"].High, ir["manual_intensity"]);
    irSlider.setSliderOnChange(light_slider_onChange);
    document.getElementById('ir-handle').style.display = "inline";
  }

  function activate_ir_illumination(activate)
  {
    resetIrUpdate();

    ir_updateTimer["last_change"] = new Date();
    var action = ( activate ? "ActivateLight" : "DeactivateLight" );
    setLightParam( action, ir_LightID, false, false, true );
  }

  function set_ir_pictures(activate)
  {
    var img_name = (activate ? "ir_activate" : "ir_deactivate");
    var element = document.getElementById(img_name+"_link");
    element.onmousedown();
  }
  <!--#endif -->

<!--#if expr="$root_Layout_ShowSpeedDry = yes" -->
  var drawSpeedDryButton, invokeSpeedDry;

  (function() {
    var disabledImg = new Image(),
        urls = {
          disabled: "/pics/button_speed_dry_disabled_27x27px.gif",
          enabled: "/pics/button_speed_dry_27x27px.gif"
        },
        id = "speedDryImg",
        disabledTimeout,
        disabledTooltipInterval,
        doneExecuting = true,
        disabledTimeoutStart;

    disabledImg.src = urls.disabled;

    // Draw the SpeedDry button
    drawSpeedDryButton = function() {
      var elArr = [{type: "button",
                    id: id,
                    pic: urls.enabled,
                    alt: langObjView.getText("speedDryTxt"),
                    url: "#",
                    onClick: "invokeSpeedDry()" }];
       outputBox(langObjView.getText("speedDryTxt"), elArr, false, true);
    }

    function changeSpeedDryButton(enabled) {
      var speedDryButton = document.getElementById(id);

      speedDryButton.src = urls[enabled ? "enabled" : "disabled"];

      if (enabled) {
        clearTimeout(disabledTimeout);
        clearInterval(disabledTooltipInterval);

        disabledTimeout = disabledTimeoutStart = null;

        speedDryButton.title = langObjView.getText("speedDryTxt");
      }
    }

    function getIntervalForSpeedDry(doneExecuting) {
      return !doneExecuting ? ptzSpeedDryActiveTime + ptzSpeedDryPassiveTime : ptzSpeedDryPassiveTime;
    }

    function calculateSecsToWaitForSpeedDry(doneExecuting) {
      return Math.max(0, getIntervalForSpeedDry(doneExecuting) - Math.round(((+(new Date()) - disabledTimeoutStart) / 1000)));
    }

    function setEnableSpeedDryTimeout(doneExecuting) {
      var interval = getIntervalForSpeedDry(doneExecuting);

      clearTimeout(disabledTimeout);
      clearInterval(disabledTooltipInterval);

      disabledTimeout = setTimeout(function() {
        changeSpeedDryButton(true);
      }, interval * 1000);

      var speedDryButton = document.getElementById(id);

      disabledTooltipInterval = setInterval(function() {
        speedDryButton.title = langObjView.getText("speedDryInProgressTxt", {
          secsToWait: calculateSecsToWaitForSpeedDry(doneExecuting)
        });
      }, 1000);

      disabledTimeoutStart = +(new Date());
    }

    invokeSpeedDry = function() {
      var speedDryBrutton_img = document.getElementById(id);

      if (!disabledTimeout) {
        var conn = AxisConnectionFactory.createAjaxConnection(),
            ajax = conn.ajax;

        doneExecuting = false;

        AxisConnectionFactory.sendAsync(["GET","/axis-cgi/com/ptz.cgi?auxiliary=speeddry"], null, function() {
          if (ajax.readyState === 4) {
            doneExecuting = true;

            if (ajax.status === 200 && /Error:/.test(ajax.responseText)) {
              alert(langObjView.getText("speedDryAlert"));
            } else if (ajax.status === 204 || ajax.status === 1223) {
              // Renew the timeout so we're sure that the button is disabled for the duration of the backend-defined timeout period
              setEnableSpeedDryTimeout(true);

              return false;
            }

            changeSpeedDryButton(true);
          }
        }, conn);

        changeSpeedDryButton(false);

        setEnableSpeedDryTimeout(false);

        return false;
      } else {
        alert(langObjView.getText("speedDryDisabledAlert", {
          secsToWait: calculateSecsToWaitForSpeedDry(doneExecuting),
          interval: getIntervalForSpeedDry()
        }));
      }
    }
  })();
<!--#endif -->

<!--#include virtual="/sm/sm.srv?action=get&group=root.Properties.PTZ.PTZ" -->

<!--#if expr="$showMemoryFocus != yes" -->
<!--#elif expr="$root_Layout_ShowMemoryFocus != yes" -->
<!--#else -->
// Draw the focus recall (memory focus) button
  (function() {
    var ajaxRequest1,
        ajaxRequest2,
        imageUrls = {
          addZone: "/pics/button_add_27x27px.gif",
          removeZone: "/pics/button_remove_27x27px.gif"
        },
        errorCodeToText = {
          "501" : "focusRecallErrorMsg",
          "502" : "errorCode502Alert",
          "503" : "errorCode503Alert",
          "504" : "errorCode504Alert",
          "505" : "errorCode505Alert",
          "506" : "errorCode506Alert"
        },
        id = "memoryFocusImg",
        memoryFocusButton = document.getElementById(id);

    drawMemoryFocusButton = function() {
      if (!window.addEventListener) {
        window.attachEvent("onload", checkMemoryZone);
      } else {
        window.addEventListener("load", checkMemoryZone);
      }
      var elArr = [{type: "button",
                    id: id,
                    pic: imageUrls.addZone,
                    alt: langObjView.getText("focusRecallTxt"),
                    url: "#",
                    onClick: "invokeMemoryFocusButton()" }];
      outputBox(langObjView.getText("focusRecallTxt"), elArr, false, true);
    }

    var previousMemoryZoneResponse;
    var checkMemoryZone = function() {
      var url = "/axis-cgi/memoryzones/list.cgi?query=current&timestamp=" + new Date().getTime(),
          imageid,
          parsedResponseTxt,
          responseTxt,
          status;

      if (!ajaxRequest2) {
        ajaxRequest2 = AxisConnectionFactory.createAjaxConnection();
      }
      if (!ajaxRequest2) {
        return;
      }
      AxisConnectionFactory.sendAsync(["GET", url ], null, function() {
        if ( ajaxRequest2.getReadyState() !== 4 ) {
          return;
        }
        status = ajaxRequest2.getStatus();
        if ( status === 0 ) {
          return;
        }
        if ( status !== 200 ) {
          alert(langObjView.getText("serverErrorMsg"));
          cancelCheckMemoryZone();
          return;
        }
        responseTxt = ajaxRequest2.getResponseText();
        if (responseTxt == "" || responseTxt == previousMemoryZoneResponse) {
          return;
        }
        previousMemoryZoneResponse = responseTxt;
        parsedResponseTxt = JSON.parse(responseTxt);
        if (parsedResponseTxt.hasOwnProperty("error")) {
          checkError(parsedResponseTxt.error.id);
          cancelCheckMemoryZone();
          return;
        }
        if (parsedResponseTxt.name === "") {
          imageid = "addZone";
        }
        else {
          imageid = "removeZone";
        }
        setMemoryFocusButton(imageUrls[imageid]);
        setButtonToolTip(imageid);
      },  ajaxRequest2);
    }

    if (typeof AXIS !== "undefined" && typeof AXIS.CustomEventUtil !== "undefined") {
      AXIS.CustomEventUtil.subscribe("PTZ:viewChanged", checkMemoryZone);
    }

    var cancelCheckMemoryZone = function() {
      if (typeof AXIS !== "undefined" && typeof AXIS.CustomEventUtil !== "undefined") {
        AXIS.CustomEventUtil.unsubscribe("PTZ:viewChanged", checkMemoryZone);
      }
    }

    invokeMemoryFocusButton = function() {
      var image_src, url;
      if (memoryFocusButton == null) {
        memoryFocusButton = document.getElementById(id);
      }
      image_src = memoryFocusButton.src;
      if (!ajaxRequest1) {
        ajaxRequest1 = AxisConnectionFactory.createAjaxConnection();
      }
      if (!ajaxRequest1) {
        return;
      }
      if (image_src.indexOf(imageUrls["addZone"]) > -1) {
        url = "/axis-cgi/memoryzones/add.cgi?focus=current&timestamp=" + new Date().getTime();
        AxisConnectionFactory.sendAsync(["GET", url ], null, function() {
          memoryFocus_onchange_add();
        }, ajaxRequest1);
      }
      else {
        url = "/axis-cgi/memoryzones/remove.cgi?timestamp=" + new Date().getTime();
        AxisConnectionFactory.sendAsync(["GET", url ], null, function() {
          memoryFocus_onchange_remove();
        }, ajaxRequest1);
      }
    }

    var memoryFocus_onchange_remove = function() {
      var status, errorResponse, requestResponse;
      var actionTxt = "removeZone";
      if ( ajaxRequest1.getReadyState() !== 4 ) {
        return;
      }
      status = ajaxRequest1.getStatus();
      if ( status === 0 ) {
        return;
      }
      // For some reason, IE11 on windows10 returns 200 instead of 204,
      // causing a unknown error to appear. When this happends, the
      // statusText is "".
      if (status === 204 || status === 1223 || status === 200 && ajaxRequest1.ajax.statusText === "") {
        toggleButton(actionTxt);
        return;
      }
      if (status !== 200) {
        alert( status + langObjView.getText("focusRecallAlert"));
        setMemoryFocusButton(imageUrls[actionTxt]);
        setButtonToolTip(actionTxt);
        return;
      }
      requestResponse = ajaxRequest1.getResponseText();
      if (requestResponse != "") {
        errorResponse = JSON.parse(requestResponse);
        checkError(errorResponse.error.id);
      }
      else {
        alert(langObjView.getText("focusRecallErrorMsg"));
      }
      setMemoryFocusButton(imageUrls[actionTxt]);
      setButtonToolTip(actionTxt);
    }

    var memoryFocus_onchange_add = function() {
      var status, parsedResponseTxt, responseTxt;
      var actionTxt = "addZone";
      if ( ajaxRequest1.getReadyState() !== 4 ) {
        return;
      }
      status = ajaxRequest1.getStatus();
      if ( status === 0 ) {
        return;
      }
      if (status !== 200) {
        alert( status + langObjView.getText("focusRecallAlert"));
        setMemoryFocusButton(imageUrls[actionTxt]);
        setButtonToolTip(actionTxt);
        return;
      }
      responseTxt = ajaxRequest1.getResponseText();
      if (responseTxt == "") {
        alert(langObjView.getText("focusRecallErrorMsg"));
        return;
      }
      parsedResponseTxt = JSON.parse(responseTxt);
      if (parsedResponseTxt.hasOwnProperty("error")) {
        checkError(parsedResponseTxt.error.id);
        setMemoryFocusButton(imageUrls[actionTxt]);
        setButtonToolTip(actionTxt);
      }
      else {
        toggleButton(actionTxt);
      }
    }

    var checkError = function(errorcode) {
      var textID = errorCodeToText[errorcode.toString()] || "focusRecallErrorMsg";
      alert(langObjView.getText(textID));
    }

    var toggleButton = function(imageStr) {
      var imageId;
      if (imageStr === "addZone") {
        imageid = "removeZone";
      }
      else {
        imageid = "addZone";
      }
      setMemoryFocusButton(imageUrls[imageid]);
      setButtonToolTip(imageid);
    }

    var setMemoryFocusButton = function(imageUrl) {
      if  (memoryFocusButton == null) {
        memoryFocusButton = document.getElementById(id);
      }
      memoryFocusButton.src = imageUrl;
    }

    var setButtonToolTip = function(actiontxt) {
      if (memoryFocusButton == null) {
        memoryFocusButton = document.getElementById(id);
      }
      if (actiontxt === "addZone") {
        memoryFocusButton.title = langObjView.getText("focusRecallAddTxt");
      }
      else {
        memoryFocusButton.title = langObjView.getText("focusRecallRemoveTxt");
      }
    }
  })();
<!--#endif -->

<!--#if expr="$root_Layout_SnapshotEnabled = yes" -->
  // Draw the snapshot button
  function drawSnapshotButton()
  {
    var elArr = new Array();
    elArr.push( {type: "button", pic: "/pics/button_shot_27x27px.gif",
                        alt: langObjView.getText("snaTxt"),
                        url: "#",
                        onClick: "snapshotWrapper()" } );
     outputBox( langObjView.getText("snaTxt"), elArr, false, true);
  }

  function snapshotWrapper()
  {
    snapshot(<!--#if expr="_$imagepath != _" -->decodeEncodingJavascript('<!--#echo var="imagepath" option="encoding:javascript" -->')<!--#else -->'/mjpg/video.mjpg'<!--#endif -->);
    return false;
  }
<!--#endif -->


  var theTempDevice = AxisConnectionFactory.createAjaxConnection();

  function startTemperatureControl(device, id)
  {
    var now = new Date();
    AxisConnectionFactory.sendSync(["GET", "/axis-cgi/temperaturecontrol.cgi?device=" + device + "&id=" + id + "&action=start&timestamp="+now.getTime()], "", theTempDevice);
  }

<!--#set var="showSetup" val="yes" -->
<!--#if expr="$root_Layout_Axis = no" -->
  <!--#if expr="$root_Layout_SetupLinkEnabled = no" -->
    <!--#set var="showSetup" val="no" -->
  <!--#endif -->
<!--#endif -->

<!--#if expr="$showSetup = yes" -->
function setHrefForSetup()
{


  // Workaround for IE7 that doesn't handle location.host correctly with IPv6.
  var axoper_new = "<!--#echo var="root_System_BoaGroupPolicy_operator" option="encoding:javascript" -->";
  var axadmin_new = "<!--#echo var="root_System_BoaGroupPolicy_admin" option="encoding:javascript" -->";

<!--#if expr="$http_user_realms >< ¤Administrator¤" -->
  var user_realm = 1;
<!--#elif expr="$http_user_realms >< ¤Operator¤" -->
  var user_realm = 2;
<!--#else -->
  var user_realm = 3;
<!--#endif -->


  var addressPart2 = "";
  <!--#if expr="$root_Layout_PlainConfigEnabled = yes" -->
  addressPart2 = "/admin/config.shtml";
  <!--#else -->
    <!--#if expr="$root_Layout_EnableBasicSetup = no" -->
      <!--#if expr="$root_Brand_ProdType = Network IO Audio Module" -->
  addressPart2 = "/operator/audio.shtml";
      <!--#else -->
  addressPart2 = "/operator/videostream.shtml";
      <!--#endif -->
  addressPart2 += "?id=<!--#echo var="ssi_request_id" option="encoding:url" -->";
    <!--#else -->
  addressPart2 = "/operator/basic.shtml?id=<!--#echo var="ssi_request_id" option="encoding:url" -->";
    <!--#endif -->
  <!--#endif -->

  document.getElementById("view_SetTxt1").href = addressPart2;
  if (user_realm === 3) {
    var currentProtocol = window.location.protocol.replace(':', '');
    if (currentProtocol !== axoper_new && axoper_new !== "both") {
      $("#view_SetTxt1").css("color", "red");
    }
  }
}
<!--#endif -->

function globalLanguageVars()
{
  var qtPlayer = document.getElementById("QTPlayer");
  var amaPlayer = document.getElementById("AMAPlayer");

<!--#if expr="$showSetup = yes" -->
  setHrefForSetup();
<!--#endif -->


  if (qtPlayer == null && amaPlayer == null)
    drawScaleButtons();

<!--#if expr="$showSizeButtons != no" -->
  drawSizeButtons();
<!--#endif -->

<!--#if expr="$root_Layout_ShowVideoFormatDropDown = yes" -->
  <!--#if expr="$seq != yes" -->
    <!--#if expr="$external = no" -->
  writeFormatOptions();
    <!--#endif -->
  <!--#endif -->
<!--#endif -->

<!--#if expr="_$root_ImageSource_I0_SceneProfile != _" -->
<!--#if expr="_$root_Layout_ShowSceneProfileSelector = _yes" -->
  drawSceneProfileSelector();
<!--#endif -->
<!--#endif -->




<!--#if expr="$root_PTZ_UserAdv_U1_WiperAvailable = true" -->
  drawWiperButton();
<!--#endif -->

<!--#if expr="$root_PTZ_UserAdv_U1_NozzlePosition = true" -->
  drawWasherButton();
<!--#endif -->

<!--#if expr="$root_Output_NbrOfOutputs != 0" -->
  requestIOPortStates();
<!--#endif -->

<!--#if expr="$(root_AudioSource_A$audionbr$_AudioSupport) = yes" -->
  <!--#if expr="$root_Layout_PlayAudioClipEnabled = yes" -->
  drawAudioClip();
  <!--#endif -->
<!--#endif -->




  drawSequenceButtons();

<!--#if expr="$showMemoryFocus != yes" -->
<!--#elif expr="$root_Layout_ShowMemoryFocus != yes" -->
<!--#else -->
  drawMemoryFocusButton();
<!--#endif -->

<!--#if expr="$root_Properties_TemperatureSensor_Fan = yes" -->
  <!--#if expr="$root_Layout_FanEnabled = yes" -->
  drawFanButton();
  <!--#endif -->
<!--#endif -->

<!--#if expr="$root_Properties_TemperatureSensor_Heater = yes" -->
  <!--#if expr="$root_Layout_HeaterEnabled = yes" -->
  drawHeaterButton();
  <!--#endif -->
<!--#endif -->

<!--#if expr="$irillumination = yes" -->
    drawIrControls();
<!--#endif -->

<!--#if expr="$root_Layout_SnapshotEnabled = yes" -->
  drawSnapshotButton();
<!--#endif -->

<!--#if expr="$root_Layout_ShowSpeedDry = yes" -->
  drawSpeedDryButton();
<!--#endif -->




<!--#if expr="$imagepath = " -->
  goto_camera('<!--#echo var="root_Layout_LiveViewVideo" option="encoding:javascript" -->');
<!--#endif -->

  document.getElementById("view_HelpTxt").innerHTML = langObjView.getText("helpTxt");
  document.getElementById("view_LViewTxt").innerHTML = langObjView.getText("lViewTxt");
  document.getElementById("view_SetTxt1").innerHTML = langObjView.getText("settTxt");

}

var playclip_request = AxisConnectionFactory.createAjaxConnection();
playclip_request.setOverrideMimeType("text/plain");

function playclip()
{
  var audioclip = document.getElementsByName("audioclip")[0].value;
  if (audioclip == "") {
    return;
  }

  var url;
<!--#if expr="$http_user_realms$ >< ¤Operator¤" -->
  url = "/axis-cgi/mediaclip.cgi?action=play&";
<!--#else -->
  url = "/axis-cgi/playclip.cgi?";
<!--#endif -->
  url += "clip=" + audioclip + "&timestamp=" + (new Date()).getTime();

  AxisConnectionFactory.sendAsync(["GET", url], "", function playclip_request_onchange() {
    try {
      if (typeof(playclip_request) !== 'object'
          || playclip_request.getReadyState() !== 4) {
        return;
      }

      var responseText = playclip_request.getResponseText();
      if (responseText.length === 0) {
        return;
      }

      var alreadyPlayingErrors = [
        "Failed to receive audio, already receiving",
        "Audio clip is already playing"
      ];

      // Check if the audio-clip is already playing
      for (var i in alreadyPlayingErrors) {
        if (responseText.indexOf(alreadyPlayingErrors[i]) != -1) {
          alert( langObjView.getText("playAlertPlaying") );
          return;
        }
      }

      // No, check for other errors
      if (responseText.indexOf("OK") == -1) {
        alert( langObjView.getText("playAlert") );
      }
    } catch (e) { }
  }, playclip_request);
}
<!--#if expr="$root_Properties_PTZ_PTZ = yes" -->
function extractVideoNbr(theParamPos)
{
  var i = 0;
  var start, stop;
  var len;
  var colonCount = 0;

  while (theParamPos.charAt(i++) != '~' && i < theParamPos.length);
  if (i >= theParamPos.length) {
    return -1;
  }
  while (colonCount < 6 && i < theParamPos.length) {
    if (theParamPos.charAt(i++) == ':') {
      colonCount++;
      if (colonCount == 4)
        start = i;
      if (colonCount == 5)
        len = i-2-start+1;
    }
  }
  if (i < theParamPos.length && len > 0)
    return parseInt(theParamPos.substr(start,len), 10);
  else
   return -1;
}

function extractPresetNbr(name)
{
  var nbr = name.slice(20, -4)
  return parseInt(nbr, 10)
}
<!--#endif -->


function getNewImageSource( camera_nbr )
{
  var imageSource;
<!--#if expr="$fmt = mpeg4+" -->
  imageSource = "/axis-media/media.amp?videocodec=mpeg4"+(( camera_nbr != null && camera_nbr != "" )?"&camera=" + camera_nbr:"");
<!--#elif expr="$fmt >< h264+" -->
  imageSource = "/axis-media/media.amp?videocodec=h264"+(( camera_nbr != null && camera_nbr != "" )?"&camera=" + camera_nbr:"");
<!--#elif expr="$fmt >< hdtv+" -->
  imageSource = "/axis-media/media.amp?videocodec=h264"+(( camera_nbr != null && camera_nbr != "" )?"&camera=" + camera_nbr:"");

  var supportedResolutions = getSupportedResolution(camera_nbr);
  if (supportedResolutions.indexOf("1920x1080") >= 0 ) {
    imageSource += "&resolution=1920x1080";
  } else if (supportedResolutions.indexOf("1280x720") >= 0 ) {
    imageSource += "&resolution=1280x720";
  }
  var oVideoFormat = document.WizardForm.videoFormat;
  var selvalue = oVideoFormat[oVideoFormat.selectedIndex].value;
  if(selvalue.toLowerCase() === 'hdtv') {
    imageSource += '&videoformat-hdtv';
  }
<!--#else -->
  imageSource = "/mjpg/video.mjpg"+(( camera_nbr != null && camera_nbr != "" )?"?camera=" + camera_nbr:"");
<!--#endif -->

  return imageSource;
}


function listVideoSources()
{
  var formInt = document.listFormInt;
  var formExt = document.listFormExt;
  var formCrop = document.listFormCrop;
  var presetForm = document.listFormPreset;
  var form = document.WizardForm
  var currentPath = decodeEncodingJavascript('<!--#echo var="imagepath" option="encoding:javascript" -->');
  var imageSource;
  var opArr = new Array();
  var opSelected = false;
  var opVal = "";
  var opText = "";

  if ((<!--#echo var="root_ImageSource_NbrOfSources" option="encoding:javascript" --> > 1)
<!--#if expr="$ptzpresets = yes" -->
       || presetForm.elements.length > 0
<!--#endif -->
       || ext_sources > 0
     ) {

    if (
<!--#if expr="$liveFocus = no" -->
      (<!--#echo var="root_ImageSource_NbrOfSources" option="encoding:javascript" --> == 1)
<!--#else -->
      true
<!--#endif -->
<!--#if expr="$ptzpresets = yes" -->
         && (presetForm.elements.length > 0)
<!--#endif -->
         && ext_sources == 0
       ) {
      opArr.push({val: "no_change", text: "----------------"});
    }

<!--#if expr="$ptzpresets = yes" -->
    // ***** PTZ presets *****
    var prevReqCam = 1;
    if (currentPath.indexOf("camera") != -1) {
      var tmpStr = currentPath.substring(currentPath.indexOf("camera")+7);
      prevReqCam = (tmpStr.indexOf("&") != -1 )?tmpStr.substr(0, tmpStr.indexOf("&") ):tmpStr.substr(0);
  <!--#if expr="$root_PTZ_ImageSource_I0_PTZEnabled != false" -->
    <!--#if expr="_$camera != _" -->
    } else {
      prevReqCam = "<!--#echo var="camera" option="encoding:javascript" -->";
    <!--#endif -->
  <!--#endif -->
    }
    var curpreset = decodeURIComponent("<!--#echo var="gotopresetname" option="encoding:javascript" -->");
    if (currentPath.indexOf("gotopresetname") != -1) {
      if (currentPath.lastIndexOf("&") > currentPath.lastIndexOf("gotopresetname="))
        curpreset = decodeURIComponent(currentPath.substring(currentPath.lastIndexOf("gotopresetname=")+15, currentPath.lastIndexOf("&")-1))
      else
        curpreset = decodeURIComponent(currentPath.substr(currentPath.lastIndexOf("gotopresetname=")+15))
    }
    for (i = 0; i < <!--#echo var="root_ImageSource_NbrOfSources" option="encoding:javascript" -->; i++) {
      if (presetForm.elements.length >= 0) {
        for (var j = 0; j < presetForm.elements.length; j++) {
          var tmpArray = presetForm.elements[j].name.split("_");
        <!--#include virtual="/sm/sm.srv?action=get&group=PTZ.Preset.P$nbr$.HomePosition" -->
          if (tmpArray[tmpArray.length - 1] == "Name") {
            var label = encodeURIComponent(presetForm[j].value);
            var currentPresetId = String( presetForm.elements[j].name ).replace("root_PTZ_Preset_P", "").split("_")[0];
  <!--#if expr="$root_PTZ_ImageSource_I0_PTZEnabled != false" -->
            var imageSourceId = presetForm["root_PTZ_Preset_P"+currentPresetId+"_ImageSource"].value;

            if(formCrop['root_Image_I' + imageSourceId + '_Enabled'].value != 'yes') {
              continue;
            }
  <!--#endif -->

            if (currentPresetId != i) {
              continue;
            }
            var videoNbr = i + 1;
            var group = tmpArray[tmpArray.length - 2];
  <!--#if expr="$root_PTZ_ImageSource_I0_PTZEnabled != false" -->
            videoNbr = Number(imageSourceId) + 1;
  <!--#endif -->

            if (videoNbr-1 == i)
            {
  <!--#if expr="$external = no" -->
    <!--#if expr="$root_PTZ_ImageSource_I0_PTZEnabled != false" -->
                var isHome = false;
                var homePos = presetForm["root_PTZ_Preset_P"+currentPresetId+"_HomePosition"];
                if (homePos && (presetForm.elements[j].name == "root_PTZ_Preset_P"+currentPresetId+"_Position_P"+homePos.value+"_Name"
                )) {
                  isHome = true;

                }

                if (<!--#echo var="root_ImageSource_NbrOfSources" option="encoding:javascript" --> > 1) {
                  currentPath = getNewImageSource(videoNbr);
                }
                else {
                  currentPath = getNewImageSource("");
                }

                if (!isHome && formCrop['root_PTZ_Various_V' + videoNbr + '_Locked'].value == 'true') {
                  continue;
                }

    <!--#endif -->
                var tmpOpt = 'gotopresetname=' + label;

                if (currentPath.indexOf('?') >= 0)
                  tmpOpt = '&' + tmpOpt;
                else
                  tmpOpt = '?' + tmpOpt;

                opSelected = false;
                opVal = currentPath + tmpOpt;

  <!--#else -->
    <!--#if expr="$root_Layout_DefaultVideoFormat = mpeg4" -->
                  var imageSource = "/axis-media/media.amp?videocodec=mpeg4&";
    <!--#elif expr="$root_Layout_DefaultVideoFormat = h264" -->
                  var imageSource = "/axis-media/media.amp?videocodec=h264&";
    <!--#else -->
                  var imageSource = "/axis-cgi/mjpg/video.cgi?"
    <!--#endif -->
                imageSource += "camera=" + videoNbr + "&gotopresetname=" + label;

                opVal = imageSource;
  <!--#endif -->
              if (decodeURIComponent(label) == curpreset && videoNbr == prevReqCam)
                opSelected = true;
      <!--#if expr="$root_PTZ_ImageSource_I0_PTZEnabled != false" -->
        <!--#if expr="$root_Properties_PTZ_DriverManagement = yes" -->
              var homeGrp = "P<!--#echo var="root_PTZ_Preset_P$nbr$_HomePosition" option="encoding:javascript" -->";
              if (group == homeGrp) {
                if (label.indexOf('(H)') == -1)
                  label += ' (H)';
              }
        <!--#endif -->
      <!--#endif -->
              opText = decodeURIComponent(label).crop(25, "...");
              opArr.push( {val: opVal, text: opText, selected: opSelected} );
            }//if videoNbr-1 == i
          }
        }
      }
    }

<!--#endif -->
var viewAppletIE = <!--#if expr="$root_Layout_ViewerIE = java" -->"yes"<!--#else -->"no"<!--#endif -->;
var viewAppletOther = <!--#if expr="$root_Layout_ViewerOther = java" -->"yes"<!--#else -->"no"<!--#endif -->;
// Don't show external sources while using Java applet as Default Viewer. An unsigned applet doesn't have permission to access remote hosts.
    if (((browser == "IE") && (viewAppletIE == "no")) || ((browser != "IE") && (viewAppletOther == "no")))
    {
      if (formExt.elements.length > 0)
      {
        for (i = 0; i < formExt.elements.length; i += 3)
        {
          var aTempString = formExt.elements[i].name
          var videoNr = aTempString.substring(20, aTempString.lastIndexOf('_'))
          var external = formExt['root_ExternalVideo_E' + videoNr + '_ImagePath'].value;

            opSelected = false;

            if (formExt['root_ExternalVideo_E' + videoNr + '_ImagePath'].value == currentPath)
              opSelected = true;
            opArr.push( {val: external, text: formExt['root_ExternalVideo_E' + videoNr + '_Name'].value, selected: opSelected} );
        }
      }
    }

    var selectBox = document.getElementById("videoList");
    if (selectBox) {
      var td = selectBox.parentNode,
          extraButton = document.createElement("input");
      if(td.getElementsByTagName('input').length === 0) {
        extraButton.type = "button";
        extraButton.value = langObjView.getText("goBtn");
        extraButton.onclick = selectView;
        extraButton.width = "40";
        td.appendChild(extraButton);
      }

      clearSelect(selectBox, false);
      selectBox.onchange = selectView;
      selectBox.disabled = <!--#if expr="$seq = yes" -->true<!--#else -->false<!--#endif -->;


      for (var i = 0; i < opArr.length; i++) {
        addSelectOption(selectBox, opArr[i].val, opArr[i].text, opArr[i].selected);
      }

    }
  }
}

function updatePresetNames(presetsArray) {
  var pForm = document.getElementsByName("listFormPreset")[0],
      formElements = [];

  formElements = pForm.elements;
  for (var presetName in presetsArray) {
    if (presetName.indexOf("_Name") > -1) {
      if (formElements[presetName] && formElements[presetName].name == presetName) {
        formElements[presetName].value = presetsArray[presetName];
      }
    }
  }

  listVideoSources();
}

function zoom(size)
{
  var url = document.URL;

  if (url.indexOf("?") == -1) {
    url += "?size=" + size
  } else if (url.indexOf("size=") == -1) {
    url += "&size=" + size
  } else {
    var searchStr = "size=<!--#echo var="size" option="encoding:javascript" -->"
    var replaceStr = "size=" + size
    var re = new RegExp(searchStr , "g")
    url = url.replace(re, replaceStr)
  }

  document.location = url;
}

var aNewImagePath;

function reloadPage()
{
  document.location = aNewImagePath;
}

<!--#if expr="$ptzpresets = yes" -->
  var gotopresetname = decodeURIComponent("<!--#echo var="gotopresetname" option="encoding:javascript" -->");
<!--#endif -->

function selectView()
{
    if (!showSourceList)
      return;
  var form = document.WizardForm;


  var oVideoList = form.videoList;
  var source = "no_change";
  if( oVideoList && oVideoList.selectedIndex >= 0 )
  {
    source = oVideoList.options[oVideoList.selectedIndex].value;
  }
  var params = source.split('&');
  var newCamera = null;
  var presetName = null;

  if ((params[1] != null) && ("<!--#echo var="external" option="encoding:javascript" -->" == "no")) {
    if (source.lastIndexOf("camera=") != -1) {
      newCamera = source.substr(source.lastIndexOf("camera=")+7);
      if (newCamera.indexOf("&") != -1) {
        newCamera = newCamera.substring(0, newCamera.indexOf("&"));
      }
    }
    else {
      newCamera = 1;
    }

    if (source.lastIndexOf("gotopresetname=") != -1) {
      presetName = source.substr(source.lastIndexOf("gotopresetname=")+15);
      if (presetName.indexOf("&") != -1 ) {
        presetName = presetName.substring(0, presetName.indexOf("&"));
      }
    }
    source = params[0];
    for (var p = 1; p < params.length; p++)
    {
      if (params[p].indexOf("gotopreset") == -1)
        source += "&" + params[p];
    }
  }
  else if (source.lastIndexOf("gotopresetname=") != -1) {
    presetName = source.substr(source.lastIndexOf("gotopresetname=")+15);
    newCamera = 1;

    params = source.split('?');
    source = params[0];
  }
  else if (source == "no_change")
  {
    return;
  }

  if (presetName != null) gotopresetname = presetName;

  var opt = null;
  <!--#if expr="_$streamprofile != _" -->
  opt = "&streamprofile=<!--#echo var="streamprofile" option="encoding:javascript" -->";
  <!--#endif -->

  source = decodeURIComponent(source);

  changeView(source, newCamera, presetName, null, opt);
}

function changeView(imagePath)
{
  var args = changeView.arguments;
  var newCamera  = (args.length >= 2 ? args[1] : null);
  var presetName = (args.length >= 3 ? args[2] : null);
  var newSize    = (args.length >= 4 ? args[3] : null);
  var other      = (args.length >= 5 ? args[4] : null);

  // Go to correct preset when coming from an external video source
  if ((presetName == null || presetName == "") && (imagePath.indexOf("gotopresetname=") != -1)) {
    presetName = imagePath.slice(imagePath.indexOf("gotopresetname=") + 15)
    if (presetName.indexOf("&") != -1)
      presetName = presetName.substring(0, presetName.indexOf("&"))
  }
  if ((newCamera == null || newCamera == "") && (imagePath.indexOf("camera=") != -1)) {
    newCamera = imagePath.slice(imagePath.indexOf("camera=") + 7)
    if (newCamera.indexOf("&") != -1)
      newCamera = newCamera.substring(0, newCamera.indexOf("&"))
  }

  var reload = false;
<!--#if expr="$seq != yes" -->
  // the whole Live View design is built on page reload >-(
  // must reload initial sequence mode view to toggle buttons etc
  reload |= (other != null && other.search("seq=yes") >= 0);
<!--#endif -->
      var streamprofile = "";
      if (other != null && other.indexOf("streamprofile=") != -1) {
        streamprofile = other.slice(other.indexOf("streamprofile=") + 14);
        if (streamprofile.indexOf("&") != -1) {
          streamprofile = streamprofile.substring(0, streamprofile.indexOf("&"));
        }
      }
      reload |= (other != null && ('<!--#echo var="streamprofile" option="encoding:url" -->' != streamprofile));
  reload |= (imagePath != decodeEncodingJavascript('<!--#echo var="imagepath" option="encoding:javascript" -->'));


<!--#if expr="$ptzpresets = yes" -->
  if ((presetName != null) && (presetName != "")) {
    var prevCamera = '<!--#echo var="camnbr" option="encoding:javascript" -->';
    // set new image path
    if (prevCamera == 'quad') {
      imagePath = imagePath.replace(/quad/, newCamera);
      reload = true;
    } else if (prevCamera != newCamera) {
      imagePath = imagePath.replace("/" + prevCamera + "/", "/" + newCamera + "/");
      reload = true;
    }
  <!--#if expr="$liveFocus = no" -->
    var oLocked = document.getElementsByName("root_PTZ_Various_V" + newCamera + "_Locked")[0];
    if (!reload && oLocked && oLocked.value != "true")
<!--#if expr="$http_user_realms$ >< ¤PTZOperator¤" -->
<!--#else -->
    if (presetName != "Home")
<!--#endif -->
  <!--#endif -->
      gotoPreset(newCamera, presetName);
  }
<!--#endif -->
  if (reload) {
    var size = newSize;

    if (size == null) {
<!--#if expr="_$size != _" -->
      size = <!--#echo var="size" option="encoding:javascript" -->;
<!--#endif -->
    }
    if (size != null) {
      size = '&size=' + size;
    }
    aNewImagePath = '/view/view.shtml?id=<!--#echo var="ssi_request_id" option="encoding:url" -->&imagePath=' + encodeURIComponent(imagePath) + size;
    if (other != null)
      aNewImagePath += other;
<!--#if expr="$ptzpresets = yes" -->
    /* append preset parameters so that preset postion is selected in drop down list after reload */
    if (presetName != '' && presetName != null)
      aNewImagePath += "&gotopresetname=" + encodeURIComponent(presetName);
    else if (gotopresetname != '' && gotopresetname != null)
      aNewImagePath += "&gotopresetname=" + encodeURIComponent(gotopresetname);

    if( newCamera != '' && newCamera != null )
      aNewImagePath += "&camera=" + encodeURIComponent(newCamera);

<!--#endif -->
    reloadPage();
  }
<!--#if expr="$ptzpresets = yes" -->
  else if (other != null) {
    selectSource(newCamera, presetName);
  }
<!--#endif -->
}

<!--#if expr="$ptzpresets = yes" -->
var ajaxRequest = AxisConnectionFactory.createAjaxConnection();
ajaxRequest.setOverrideMimeType("text/plain");
function gotoPreset(camera, presetName)
{
  var now = new Date();

  <!--#if expr="_$camnbr != _" -->
    <!--#set var="idx" val="$camnbr$" -->
  <!--#else -->
    <!--#set var="idx" val="1" -->
  <!--#endif -->


  var speed = parseInt("<!--#if expr="_$(root_PTZ_UserAdv_U$idx$_MoveSpeed) != _" --><!--#echo var="root_PTZ_UserAdv_U$idx$_MoveSpeed" option="encoding:javascript" --><!--#else -->70<!--#endif -->", 10);

  var url = "/axis-cgi/com/ptz.cgi?gotoserverpresetname=" + presetName + "&camera=" + camera + "&timestamp="+now.getTime() <!--#if expr="_$(root_PTZ_Various_V$idx$_SpeedCtlEnabled) != _" --><!--#if expr="$(root_PTZ_Various_V$idx$_SpeedCtlEnabled) = true" --> +"&speed=" + speed<!--#endif --><!--#endif -->;

  if (ajaxRequest.getReadyState() > 0 || ajaxRequest.getReadyState() < 4)
    ajaxRequest.abort();

  AxisConnectionFactory.sendAsync(["GET", url], "", ajaxRequest_onchange, ajaxRequest);
}

function ajaxRequest_onchange()
{
  if (typeof(ajaxRequest) == 'object' && ajaxRequest.getReadyState() == 4) {
    try {
      if (ajaxRequest.getStatus() == 200 && ajaxRequest.getResponseText().length > 0)
      {
        var errorMessage;
        var responseText = ajaxRequest.getResponseText();
        if(responseText.indexOf("<HTML>") != -1 || responseText.indexOf("<html>") != -1)
        {
          var headStartPos = responseText.indexOf("<HEAD>");
          if(headStartPos == -1)
            headStartPos = responseText.indexOf("<head>");
          var headEndPos = responseText.indexOf("</HEAD>")+7;
          if(headEndPos == -1)
            headEndPos = responseText.indexOf("</head>")+7;

          responseText = responseText.replace(responseText.slice(headStartPos, headEndPos),"");
          var re= /<\S[^>]*>/g;
          errorMessage = responseText.replace(re,"");
        } else {
          if (responseText.indexOf("Control is not possessed - request put in control queue.") >= 0) {
            errorMessage =langObjPTZIncl.getText("ptzInclContrlPossessTxt");
          } else {
            errorMessage = responseText;
          }
        }

        alert(errorMessage);
      }
    } catch(e) {}
  }
}

function selectSource(newCamera, presetName) {
    if (!showSourceList)
      return;
  var options = document.WizardForm.videoList.options;
  var i = 0;
  var option;

  while ((option = options[i++]) != null) {
    if (presetName != null) {
      var presetStart = option.value.search('gotopresetname');
      if (presetStart != -1) {
        var preset = option.value.substring(presetStart).split('=');
        if (decodeURIComponent(preset[1]) == presetName) {
          option.selected = true;
          return;
        }
      }
    } else {
      var videoNbr = option.value.match(/\d/);
      if (videoNbr == null && newCamera == 1 || videoNbr == newCamera) {
        option.selected = true;
        return;
      }
    }
  }
}
<!--#endif -->

var seqNext = null;

function doSequence(size) {
  var formSeq = document.listFormSeq;
  var formExt = document.listFormExt;
  var presetForm = document.listFormPreset;
  var seqSources = new Array();
  var seqNumbers = new Array();
  var seqTimes = new Array();
  var cameraNbr;
  var presetName = null;
  var imagePath;
  var next;

  for (var i = 0; i < formSeq['root_Sequence_S0_NbrOfSources'].value; i++) {
    seqSources[i] = formSeq['root_Sequence_S0_Source_S' + i + '_Type'].value;
    seqNumbers[i] = formSeq['root_Sequence_S0_Source_S' + i + '_Number'].value;
    seqTimes[i] = formSeq['root_Sequence_S0_Source_S' + i + '_Time'].value;
  }

  if (seqNext != null) {
    next = seqNext;
  } else {
<!--#if expr="_$next = _" -->
    next = 0;
<!--#else -->
    next = <!--#echo var="next" option="encoding:javascript" -->;
<!--#endif -->
  }

  imagePath = "";
  if (seqSources[next] == 'Ext') {
    imagePath = formExt['root_ExternalVideo_E' + seqNumbers[next] + '_ImagePath'].value;
  }
<!--#if expr="$ptzpresets = yes" -->
  else if (seqSources[next] == 'Preset') {
    cameraNbr = 1
    presetName = presetForm['root_PTZ_Preset_P0_Position_P' + seqNumbers[next] + '_Name'].value;
  }
<!--#endif -->
  else if (seqSources[next] == 'Quad') {
    cameraNbr = 'quad';
  } else {
    cameraNbr = parseInt(seqNumbers[next], 10) + 1;
  }

  if (imagePath == "") {
<!--#if expr="$root_Layout_DefaultVideoFormat = mpeg4" -->
      imagePath = '/axis-media/media.amp?videocodec=mpeg4&camera=' + cameraNbr;
<!--#elif expr="$root_Layout_DefaultVideoFormat = h264" -->
      imagePath = '/axis-media/media.amp?videocodec=h264&camera=' + cameraNbr;
<!--#else -->
      imagePath = '/mjpg/video.mjpg';
<!--#endif -->
  }

  var nextNext;
  if (formSeq['root_Sequence_S0_RandomEnabled'].value == "yes")
    nextNext = Math.floor(Math.random() * formSeq['root_Sequence_S0_NbrOfSources'].value);
  else
    nextNext = next + 1;
  if (nextNext >= formSeq['root_Sequence_S0_NbrOfSources'].value)
    nextNext = 0;

  seqNext = nextNext;
    changeView(imagePath, cameraNbr, presetName, size, '&seq=yes&next=' + nextNext + '&sequencetime=' + seqTimes[next]);

    t1 = setTimeout("doSequence(" + size + ")", 1000 * seqTimes[next]);
}


function snapshot(imagepath)
{
  var no = document.WizardForm.amount.value++
  var picturepath;
  var cgiurl = "/axis-cgi/jpg/image.cgi?camera=";
  var protEnd = imagepath.indexOf("://");
  var camIndex = imagepath.indexOf("camera=");

  if (imagepath.charAt(0) == '/' && protEnd < 0) {
    if (camIndex >= 0) {
      var secondEt = imagepath.indexOf('&', camIndex);
      var camnbr = imagepath.substring(camIndex + 7, (secondEt >= 0 ? secondEt : imagepath.length));
    } else {
      var afterfirstSlash = imagepath.indexOf('/', 1) + 1;
      var secondSlash = imagepath.indexOf('/', afterfirstSlash);
      var camnbr = imagepath.substring(afterfirstSlash, (secondSlash >= 0 ? secondSlash : imagepath.length));
    }
    if (camnbr != "quad" && isNaN(parseInt(camnbr, 10)))
      camnbr = 1;
    picturepath = cgiurl + camnbr;
  } else {
    if (imagepath.indexOf("h264") >= 0 || imagepath.indexOf("mpeg4") >= 0) {
      var prot = document.location.protocol;
      var imageHost = imagepath.substring(protEnd + 3, imagepath.indexOf('/', protEnd+3));
      var secondEt = imagepath.indexOf('&', camIndex);
      var camnbr = imagepath.substring(camIndex + 7, (secondEt >= 0 ? secondEt : imagepath.length));
      if (camnbr != "quad" && isNaN(parseInt(camnbr, 10)))
        camnbr = 1;
      picturepath = prot + "//" + imageHost + cgiurl + camnbr;
    } else {
      picturepath = imagepath.replace(/video/, "image").replace(/mjpg/g, "jpg");
    }
  }


  var pictureoptions = "";
<!--#if expr="$invalidProfile != yes" -->
  <!--#if expr="_$streamprofile != _" -->
    pictureoptions += "&streamprofile=<!--#echo var="streamprofile" option="encoding:javascript" -->";
  <!--#endif -->
<!--#endif -->
<!--#if expr="_$palette != _" -->
  pictureoptions += "&palette=<!--#echo var="palette" option="encoding:javascript" -->";
<!--#endif -->
  var url = picturepath + pictureoptions;
  var time = new Date()
  var timestamp = time.getTime()

  url += '&timestamp=' + timestamp + '&width=' + <!--#echo var="snapshotWidth" option="encoding:javascript" -->
  openPopUp(url, 'Take_snapshot' + [no] + '', <!--#echo var="snapshotWidth" option="encoding:javascript" --> + 45, <!--#echo var="snapshotHeight" option="encoding:javascript" --> + 75 )
}

<!--#if expr="$root_Properties_PTZ_PTZ = yes" --><!--#include virtual="/incl/statusPtz.shtml" --><!--#endif -->
function movepic(img_name, img_src)
{
  var element = document.getElementById(img_name+"_link");
  if (element)
    element.firstChild.src = img_src;
}

function auto(Path)
{
  parent.frames[1].location = Path
}

function AbsoluteOrRelative(form)
{
  var url = document.URL;
  var relative = "yes_no_cross";
  var oAbsOrRel = form.AbsOrRel;
  if ( oAbsOrRel && oAbsOrRel.selectedIndex == 0)
    relative = "no";
  if (url.indexOf("?") == -1) {
    url += "?relative=" + relative;
  } else if (url.indexOf("relative=") == -1) {
    url += "&relative=" + relative;
  } else {
    var searchStr = "relative=<!--#echo var="relative" option="encoding:javascript" -->";
    var replaceStr = "relative=" + relative;
    var re = new RegExp(searchStr , "g");
    url = url.replace(re, replaceStr);
  }
  document.location = url;
}


<!--#include virtual="/incl/video.shtml" -->

function goto_camera(cam)
{
  cam += ''; // cam value needs to be a string, not an integer, for cam.length to work.
<!--#if expr="$root_ImageSource_NbrOfSources = 1" -->
  cam = '';
<!--#endif -->

  newVideoFormatCam(cam);
}


<!--#set var="usingStreamProfiles" val="true" -->
function getStreamProfileNbr()
{
<!--#if expr="$root_Layout_ShowVideoFormatDropDown = yes" -->
  var videoFormat = "MJPEG";
  var oVideoFormat = document.WizardForm.videoFormat;
  if( oVideoFormat && oVideoFormat.selectedIndex >= 0 )
  {
    videoFormat = oVideoFormat.options[ oVideoFormat.selectedIndex ].value;
  }
  return videoFormat;
<!--#else -->
  return getProfileGrp(document.profileForm,"<!--#echo var="root_Layout_DefaultStreamProfile" option="encoding:javascript" -->");
<!--#endif -->
}

function getStreamProfileName()
{
  try {
    var nbr = getStreamProfileNbr();
    return ( isNaN( nbr )?"":document.profileForm["root_StreamProfile_S" + nbr + "_Name"].value );
  }
  catch(e) {
    alert( langObjView.getText("proNoVaAlrt") );
  }
}

function getStreamProfileParameters()
{
  try {
    var nbr = getStreamProfileNbr();
    return ( isNaN( nbr )?"":document.profileForm["root_StreamProfile_S" + nbr + "_Parameters"].value );
  }
  catch(e) {
    alert( langObjView.getText("proNoVaAlrt") );
  }
}
// -->
</script>


<!--#if expr="$external = no" -->
<!--#if expr="$camnbr = quad" -->

<script language="JavaScript">
<!--
if (browser === "Netscape") {
  var quadMap = '<map name="QuadMap">';
  quadMap += '<area id="areaVideo1" shape="rect" coords="0,0,0,0" href="" target="" title="">';
  quadMap += '<area id="areaVideo2" shape="rect" coords="0,0,0,0" href="" target="" title="">';
  quadMap += '<area id="areaVideo3" shape="rect" coords="0,0,0,0" href="" target="" title="">';
  quadMap += '<area id="areaVideo4" shape="rect" coords="0,0,0,0" href="" target="" title="">';
  quadMap += '</map>';
  document.write(quadMap);

  function updateQuadMap() {
    if (document.getElementsByName('QuadMap').length > 0) {
      var stream = document.getElementById('stream');
      if (stream) {
        var img_width = stream.clientWidth;
        var img_height = stream.clientHeight;

        var coords = [
          '0,0,' + (img_width / 2 - 1) + ',' + (img_height / 2 - 1),
          (img_width / 2) + ',0,' + img_width + ',' + (img_height / 2 - 1),
          '0,' + (img_height / 2) + ',' + (img_width / 2 - 1) + ',' + img_height,
          (img_width / 2) + ',' + (img_height / 2) + ',' + img_width + ',' + img_height
        ];

        for (var i = 0; i < 4; i++) {
          document.getElementById('areaVideo' + (i+1)).coords = coords[i];
        }
      }
    }
  }

  function addNewEvent(element, event, triggerFunction) {
    if (element.addEventListener) {
      element.addEventListener(event, triggerFunction, false);
    } else if (element.attachEvent) {
      element.attachEvent('on' + event, triggerFunction);
    }
  }

  function addQuadUpdateTo(id) {
    var element = document.getElementById(id);
    if (element) {
      addNewEvent(element, 'click', function() {
        setTimeout(updateQuadMap, 500);
      });
    }
  }

  function addQuadMap() {
    if (document.getElementById('stream')) {
      updateQuadMap();
      addNewEvent(window, 'resize', updateQuadMap);
      addQuadUpdateTo('adjustSize');
      addQuadUpdateTo('fullSize');
    } else {
      setTimeout(addQuadMap, 500);
    }
  }

  addQuadMap();
}
// -->
</script>

<script language="JavaScript" FOR="Player" EVENT="OnMouseDown(nButton,nShift,X,Y)">
<!--
if (nButton == 1)
{
  var cam,
  rotationValue,
  width,
  height;

  rotationValue = "<!--#echo var="root_Image_I4_Appearance_Rotation" option="encoding:javascript" -->"
  if (document.Player) {
    width = document.Player.clientWidth;
    height = document.Player.clientHeight;
  } else {
    width = <!--#echo var="img_width" option="encoding:javascript" --> * <!--#echo var="size" option="encoding:javascript" -->;
    height = <!--#echo var="img_height" option="encoding:javascript" --> * <!--#echo var="size" option="encoding:javascript" -->;
  }
  if (X < width / 2) {
    cam = rotationValue === '180' ? 4:1;
  } else {
    cam = rotationValue === '180' ? 3:2;
  }

  if (Y >= height / 2) {
    if (rotationValue === '180') {
      cam -= 2;
    } else {
      cam += 2;
    }
  }

  goto_camera(cam);
}
// -->
</script>

<!--#endif --><!-- $camnbr = quad -->
<!--#endif --><!-- $external = no -->

<script SRC="/incl/activeX.js?id=<!--#echo var="ssi_request_id" option="encoding:url" -->"></script>

<script language="JavaScript">

  var videoConfiguredCorrectly = true;

  if (typeof AXIS !== "undefined" && typeof AXIS.CustomEventUtil !== "undefined") {
    AXIS.CustomEventUtil.once("video:unsupportedResolution", function() {
      videoConfiguredCorrectly = false;
    });
  }

  function bodyOnLoad() {

  <!--#if expr="$root_Brand_ProdType = Network IO Audio Module" -->
    langObjView.init();
    UpdateIO();
  <!--#endif -->

    langObjView.init();

    if (!videoConfiguredCorrectly) {
      var resolutionHint = document.createElement("div");
      resolutionHint.className = "hint";

      var resolutionHintHeader = document.createElement("div");
      resolutionHintHeader.className = "header";
      resolutionHintHeader.innerHTML = langObjView.getText("unsupportedResolutionTxt");

      resolutionHint.appendChild(resolutionHintHeader);

      var resolutionHintExplanation = document.createElement("p");
      resolutionHintExplanation.innerHTML = langObjView.getText("unsupportedResolutionHintTxt");

      resolutionHint.appendChild(resolutionHintExplanation);

      document.querySelector("#streamPlaceholder").appendChild(resolutionHint);
    }
    else {
      DrawTB('<!--#echo var="UseAudio" option="encoding:javascript" -->',
        decodeEncodingJavascript('<!--#echo var="imagepath" option="encoding:javascript" -->'),
        '<!--#echo var="camnbr" option="encoding:javascript" -->',
        '<!--#echo var="root_Layout_AMCRecordMedia" option="encoding:javascript" -->',
        'no',
        '<!--#if expr="$showPTZCrosshair = no" -->no<!--#else --><!--#echo var="showPTZBars" option="encoding:javascript" --><!--#endif -->',
        '<!--#echo var="root_PTZ_Support_S$camnbr$_JoyStickEmulation" option="encoding:javascript" -->'
        <!--#if expr="$usingStreamProfiles = true" -->, getStreamProfileNbr()<!--#if expr="_$streamprofile != _" -->, getStreamProfileName()<!--#endif --><!--#endif -->);
      dynamicResize();
    }

    <!--#if expr="$showPTZBars = yes" -->
      <!--#if expr="$external = no" -->
        init();

      <!--#endif -->
    <!--#endif -->

    <!--#if expr="$ptzpresets = yes" -->
      requestPTZPresets(updatePresetNames);
    <!--#else -->
      listVideoSources();
    <!--#endif -->

    drawTriggerButtons();

      <!--#if expr="$irillumination = yes" -->
        initIrControls();
      <!--#endif -->


  }

  function bodyOnResize() {
    if (!videoConfiguredCorrectly) {
      return;
    }

    dynamicResize();

    <!--#if expr="$showPTZBars = yes" -->
      <!--#if expr="$external = no" -->
        init();
      <!--#endif -->
    <!--#endif -->

      <!--#if expr="$irillumination = yes" -->
        updateIrControls();
      <!--#endif -->


  }
</script>
</head>

<!--#if expr="$root_Layout_BGPicture_Source = default" -->
  <!--#set var="root_Layout_BGPicture_Source" val="none" -->
<!--#endif -->


<body class="bodyBg" topmargin="0" leftmargin="15" marginwidth="0"  marginheight="0" <!--#if expr="$root_Layout_Axis = no" --><!--#if expr="$root_Layout_BGPicture_Source != none" --> background="<!--#if expr="$root_Layout_BGPicture_Source = own" -->/local/<!--#echo var="root_Layout_BGPicture_Path" option="encoding:javascript" --><!--#else --><!--#echo var="root_Layout_BGPicture_Address" option="encoding:javascript" --><!--#endif -->"<!--#endif --><!--#endif --> onload="bodyOnLoad();" onresize="bodyOnResize();">
<script language="JavaScript">
<!--
  var t1;
<!--#if expr="$seq = yes" -->
  var size;
  <!--#if expr="_$size = _" -->
  size = 1;
  <!--#else -->
  size = <!--#echo var="size" option="encoding:javascript" -->;
  <!--#endif -->
  t1 = setTimeout("doSequence(size)", 1000*<!--#echo var="sequencetime" option="encoding:javascript" -->);
  var seqOn = "yes";
<!--#else -->
  var seqOn = "no";
<!--#endif -->

function sequence()
{
  var size;
  if (seqOn == 'no') {
    seqOn = 'yes';
<!--#if expr="_$size = _" -->
    size = 1;
<!--#else -->
    size = <!--#echo var="size" option="encoding:javascript" -->;
<!--#endif -->
    doSequence(size);
  } else {
    clearTimeout(t1);
    seqOn = 'no';
    link = document.URL;
    if (link.indexOf('seq=yes' != -1)) {
      var regexp = /seq=yes&/;
      link = link.replace(regexp, "");
    }
    document.location = link;
  }
  return;
}

// -->
</script>




<form name="profileForm">
<!--#include virtual="/sm/sm.srv?action=get_htmlform&getgroup=root.StreamProfile&format=hiddenhtmlform" -->
</form>
<form name="listFormInt">
<!--#include virtual="/sm/sm.srv?action=get_htmlform&getgroup=root.ImageSource&format=hiddenhtmlform" -->
</form>

<form name="listFormCrop">
<!--#include virtual="/sm/sm.srv?action=get&group=Image.I0.Name,Image.I0.Enabled,PTZ.Various.V1.Locked" -->
  <input type="hidden" name="root_Image_I0_Name" id="root_Image_I0_Name" value="<!--#echo var="root_Image_I0_Name" option="encoding:html" -->" />
  <input type="hidden" name="root_Image_I0_Enabled" id="root_Image_I0_Enabled" value="<!--#echo var="root_Image_I0_Enabled" option="encoding:html" -->" />
  <input type="hidden" name="root_PTZ_Various_V1_Locked" id="root_PTZ_Various_V1_Locked" value="<!--#echo var="root_PTZ_Various_V1_Locked" option="encoding:html" -->" />
</form>

<form name="listFormExt">
<!--#include virtual="/sm/sm.srv?action=get_htmlform&getgroup=root.ExternalVideo&format=hiddenhtmlform" -->
</form>

<script language="JavaScript">
<!--

// Calculate the number of external sources that are supported by this browser
var ext_sources = 0;
ext_sources = document.listFormExt.elements.length/3;
// -->
</script>

<!--#if expr="$ptzpresets = yes" -->
<form name="listFormPreset">
      <!--#include virtual="/sm/sm.srv?action=get_htmlform&get=root.PTZ.Preset.P0.ImageSource&format=hiddenhtmlform" -->
      <!--#include virtual="/sm/sm.srv?action=get_htmlform&get=root.PTZ.Preset.P0.HomePosition&format=hiddenhtmlform" -->
      <!--#include virtual="/sm/sm.srv?action=get_htmlform&getgroup=root.PTZ.Preset.P0.Position&format=hiddenhtmlform" -->
</form>
<!--#endif -->

<form name="listFormSeq">
<!--#include virtual="/sm/sm.srv?action=get_htmlform&getgroup=root.Sequence&format=hiddenhtmlform" -->
</form>

<script language="JavaScript">
<!--

// Calculate the number of sequence sources that are supported by this browser
var seq_sources = 0;
if (document.listFormSeq.elements.length > 0 )  {
  if (browser == "IE") {
    seq_sources = document.listFormSeq['root_Sequence_S0_NbrOfSources'].value;
  } else {
    for (var i = 0; i < document.listFormSeq['root_Sequence_S0_NbrOfSources'].value; i++) {
      var type = document.listFormSeq['root_Sequence_S0_Source_S' + i + '_Type'].value;
      if (type != 'Ext') {
        seq_sources++;
      } else {
        var num = document.listFormSeq['root_Sequence_S0_Source_S' + i + '_Number'].value;
        var path = document.listFormExt['root_ExternalVideo_E' + num + '_ImagePath'].value;
        if ((path.indexOf("mpeg4") == -1) || (path.indexOf("h264") == -1)) {
          seq_sources++;
        }
      }
    }
  }
}
// -->
</script>

<form name="outputsForm">
  <!--#include virtual="/sm/sm.srv?action=get_htmlform&getgroup=root.IOPort&format=hiddenhtmlform" -->
</form>

<!--#if expr="$(root_AudioSource_A$audionbr$_AudioSupport) = yes" --><!--#if expr="$root_Layout_PlayAudioClipEnabled = yes" -->
<form name="audioclipsForm">
<!--#include virtual="/sm/sm.srv?action=get_htmlform&getgroup=root.MediaClip&format=hiddenhtmlform" -->
</form>
<!--#endif --><!--#endif -->


  <form name="UploadedFilesForm">
  <!--#include virtual="/axis-cgi/viewer/local_list.cgi?hdgen=no" -->
  </form>

<table width="100%" cellspacing=0 cellpadding=0 border=0><tr><td align="center">
<form name="WizardForm" method="post">
    <input type="hidden" name="root_Layout_Trigger_T0_Enabled" value="<!--#echo var="root_Layout_Trigger_T0_Enabled" option="encoding:html" -->" />

  <input type="hidden" name="amount" value="0" />

  <br>
  <table width=778 cellspacing=0 cellpadding=0 border=0>
    <tr class="top-mainborder">
      <td colspan=2><img src="/pics/line_corner_lt_5x5px.gif" width=5 height=5 border=0 alt=""></td>
      <td background="/pics/line_t_100x5px.gif"><img src="/pics/line_t_100x5px.gif" width=768 height=5 border=0 alt=""></td>
      <td colspan=2><img src="/pics/line_corner_rt_5x5px.gif" width=5 height=5 border=0 alt=""></td>
    </tr>
    <tr>
      <td class="lineBg"><img src="/pics/blank.gif" width="1" border=0 alt=""></td>
      <td><img src="/pics/blank.gif" width="4" height=1 border=0 alt=""></td>
      <td valign="middle" align="left" width="100%">
        <table border=0 cellspacing=0 cellpadding=0 width="100%">
          <tr>

<!--#if expr="$root_Layout_Axis = no" -->
  <!--#if expr="$root_Layout_Logo_Link = default" -->
    <!--#set var="root_Layout_Logo_LinkURL" val="http://www.axis.com/" -->
  <!--#endif -->
  <!--#if expr="$root_Layout_Logo_Source = default" -->
    <!--#set var="root_Layout_Logo_Address" val="/pics/logo_70x29px.gif" -->
  <!--#endif -->
  <!--#if expr="$root_Layout_Logo_Source = own" -->
    <!--#set var="root_Layout_Logo_Address" val="/local/$root_Layout_Logo_Path$" -->
  <!--#endif -->

  <!--#if expr="$root_Layout_Banner_Link = default" -->
    <!--#set var="root_Layout_Banner_LinkURL" val="http://www.axis.com/" -->
  <!--#endif -->
  <!--#if expr="$root_Layout_Banner_Source = default" -->
    <!--#set var="root_Layout_Banner_Address" val="/pics/banner_top.gif" -->
  <!--#endif -->
  <!--#if expr="$root_Layout_Banner_Source = own" -->
    <!--#set var="root_Layout_Banner_Address" val="/local/$root_Layout_Banner_Path$" -->
  <!--#endif -->

            <td><!--#if expr="$root_Layout_Logo_Link != none" --><a href="<!--#echo var="root_Layout_Logo_LinkURL" option="encoding:html" -->" target=_blank><!--#endif --><!--#if expr="$root_Layout_Logo_Source != none" --><img src="<!--#echo var="root_Layout_Logo_Address" option="encoding:html" -->" border=0><!--#endif --><!--#if expr="$root_Layout_Logo_Link != none" --></A><!--#endif --></td>
            <td><!--#if expr="$root_Layout_Banner_Link != none" --><a href="<!--#echo var="root_Layout_Banner_LinkURL" option="encoding:html" -->" target=_blank><!--#endif --><!--#if expr="$root_Layout_Banner_Source != none" --><img src="<!--#echo var="root_Layout_Banner_Address" option="encoding:html" -->" border=0><!--#endif --><!--#if expr="$root_Layout_Banner_Link != none" --></A><!--#endif --></td>
<!--#else -->
          <td>
  <script language="JavaScript" type="text/javascript">
  <!--
    for (i=0; i<document.UploadedFilesForm.length; i++) {
      if (document.UploadedFilesForm.elements[i].value.indexOf("viewer/extraLogo_left.") != -1) {
        document.write('<img src="/local/'+document.UploadedFilesForm.elements[i].value+'">&nbsp;');
        break;
      }
    }
  -->
  </script>
          <a href="http://www.axis.com/" target=_blank><img src="/pics/logo_70x29px.gif" width=68 height=29 border=0 title="Axis" alt="Axis"></a>
  <script language="JavaScript" type="text/javascript">
  <!--
    for (i=0; i<document.UploadedFilesForm.length; i++) {
      if (document.UploadedFilesForm.elements[i].value.indexOf("viewer/extraLogo_right.") != -1) {
        document.write('&nbsp;<img src="/local/'+document.UploadedFilesForm.elements[i].value+'">');
        break;
      }
    }
  -->
  </script>
        </td>
            <td class="topTitle" align="center" id="view_prodName" nowrap><!--#echo var="glob_prodName" option="encoding:html" --></td>
<!--#endif -->
            <td align="right" nowrap>
              <table cellpadding=0 cellspacing=5 border=0>
                <tr>
                  <td nowrap><a href="/index.shtml" target="_top" class="linkActive" id="view_LViewTxt"></a></td><td>|</td>
<!--#if expr="$showSetup = yes" -->
                  <td><a href="" class="linkInActive" target="_top" id="view_SetTxt1"></a></td><td>|</td>
<!--#else -->
                  <td colspan="2"></td>
<!--#endif -->
                  <td><a href="#" onClick="javascript:launch('/help/liveview_h.shtml?cntrlQue=<!--#echo var="cntrlQue" option="encoding:url" -->'); return false;" class="linkInActive" id="view_HelpTxt"></a></td>
                </tr>
              </table>
            </td>
          </tr>
        </table>
      </td>

      <td><img src="/pics/blank.gif" width="4" border=0 alt=""></td>
      <td class="lineBg"><img src="/pics/blank.gif" width=1 height=1 alt=""></td>
    </tr>
    <tr>
      <td class="lineBg"><img src="/pics/blank.gif" width=1 height=5 alt=""></td>
      <td colspan=3><img src="/pics/blank.gif" width=1 height=5 alt=""></td>
      <td class="lineBg"><img src="/pics/blank.gif" width=1 height=5 alt=""></td>
    </tr>
    <tr class="bottom-mainborder">
      <td colspan=2><img src="/pics/line_corner_lb_5x5px.gif" width=5 height=5 alt=""></td>
      <td background="/pics/line_b_100x5px.gif"><img src="/pics/blank.gif" width=768 height=5 alt=""></td>
      <td colspan=2><img src="/pics/line_corner_rb_5x5px.gif" width=5 height=5 alt=""></td>
    </tr>
    <tr>
      <td colspan=5><img src="/pics/blank.gif" width=1 height=5 border=0 alt=""></td>
    </tr>

    <tr>
      <td colspan=5>
        <table width="100%" cellpadding=0 cellspacing=0 border=0>
          <tbody>
          <tr id="appendableTr">
          </tr>
          </tbody>
        </table>
      </td>
    </tr>

    <tr>
      <td colspan=5><img src="/pics/blank.gif" width=1 height=5 border=0 alt=""></td>
    </tr>
    <tr class="top-mainborder">
      <td colspan=2><img src="/pics/line_corner_lt_5x5px.gif" width=5 height=5 border=0 alt=""></td>
      <td background="/pics/line_t_100x5px.gif"><img src="/pics/blank.gif" width=768 height=5 border=0 alt=""></td>
      <td colspan=2><img src="/pics/line_corner_rt_5x5px.gif" width=5 height=5 border=0 alt=""></td>
    </tr>

    <tr>
      <td width=1 class="lineBg"><img src="/pics/blank.gif" width=1 height=1 border=0 alt=""></td>
      <td width=4><img src="/pics/blank.gif" width=4 height=1 border=0 alt=""></td>
      <td valign="top" align="center" width="768">

      <!--#if expr="$root_Layout_Axis = no" -->
        <!--#if expr="$root_Layout_Title_Source != none" -->
          <table border=0 cellpadding=3 cellspacing=3>
            <tr>
              <td class="normalText" align="center"<!--#if expr="$showPTZBars != yes" --> colspan="2"<!--#endif -->>
                <b><!--#if expr="$root_Layout_Title_Source = default" --><span id="defTitTxt"></span><!--#else --><!--#echo var="root_Layout_Title_String" option="encoding:html" --><!--#endif --></b>
              </td>
              <!--#if expr="$showPTZBars = yes" --><!--#if expr="$external = no" -->
                <td width="60"><br></td>
              <!--#endif --><!--#endif -->
            </tr>
          </table>
        <!--#endif -->
      <!--#endif -->

      <table border="0" cellpadding="0" cellspacing="0" height="100%" width="776">
          <tr height=197>
            <td valign="top"></td>
            <td valign="top" class="normalText" align="center" rowspan=<!--#if expr="$showPTZBars = yes" -->4<!--#else -->2 colspan="2"<!--#endif -->>
              <div id="filterinstallocation"></div>
            </td>
            <td align="center" class="normalText">
              <table border="0" cellpadding="3" cellspacing="3">
                <tr>
                  <td>
                    <!--#if expr="$showPTZBars = yes" -->
                      <!--#if expr="$external = no" -->
                        <script src="/incl/pos.js?ver=<!--#echo var="root_Properties_Firmware_Version" option="encoding:url" -->"></script>
                        <!--#if expr="$showPTZCrosshair = yes" -->
                          <img id="crosshair" src="/pics/crosshair.png" width="16" height="16" style="position:absolute;visibility:hidden;left:0;top:0" border="0" />
                        <!--#endif -->
                      <!--#endif -->
                    <!--#endif -->

                    <script language="JavaScript">
                    <!--
                    <!--#set var="newimagepath" val="$imagepath$" -->
                    <!--#if expr="_$resolution != _" -->
                      <!--#if expr="$newimagepath >< ?" --><!--#set var="newimagepath" val="$newimagepath$&resolution=$resolution$" --><!--#else --><!--#set var="newimagepath" val="$newimagepath$?resolution=$resolution$" --><!--#endif -->
                    <!--#endif -->
                    <!--#if expr="_$streamprofile != _" -->
                        <!--#if expr="$invalidProfile != yes" -->
                          <!--#if expr="$newimagepath >< ?" -->
                            <!--#set var="newimagepath" val="$newimagepath$&streamprofile=$streamprofile$" -->
                          <!--#else -->
                            <!--#set var="newimagepath" val="$newimagepath$?streamprofile=$streamprofile$" -->
                          <!--#endif -->
                        <!--#endif -->
                      <!--#endif -->
                    <!--#if expr="_$imagepath != _" -->
                      var newimagepath = "<!--#echo var="newimagepath" option="encoding:url" -->";
                      var properties_audio_enabled = "<!--#echo var="root_Properties_Audio_Audio" option="encoding:javascript" -->";
                      var audiochannel_enabled = "<!--#echo var="root_Audio_A$audiochannel$_Enabled" option="encoding:javascript" -->";
                      var audiosource = "<!--#echo var="audionbr" option="encoding:javascript" -->";
                      var audiosupport = "<!--#echo var="root_AudioSource_A$audionbr$_AudioSupport" option="encoding:javascript" -->";
                      var videoformat = "<!--#echo var="fmt" option="encoding:javascript" -->";
                      var streamProfAudio = "<!--#echo var="audio" option="encoding:javascript" -->";
                      var streamProfUseAudio = (streamProfAudio == "no")?false:true;

                      if (newimagepath.indexOf('http://') !== -1 || newimagepath.indexOf('https://') !== -1 || newimagepath.indexOf('script') !== -1) {
                        var cameraNbr;

                          cameraNbr = 1

                        <!--#if expr="$root_Layout_DefaultVideoFormat = mpeg4" -->
                          <!--#set var="videocodec" val="mpeg4" -->
                        <!--#elif expr="$root_Layout_DefaultVideoFormat = h264" -->
                          <!--#set var="videocodec" val="h264" -->
                        <!--#endif -->

                        <!--#if expr="_$videocodec!= _" -->
                          newimagepath = "/axis-media/media.amp?videocodec=" +"<!--#echo var="videocodec" option="encoding:javascript" -->" +"&camera=" + cameraNbr;
                        <!--#else -->
                          newimagepath = '/mjpg/video.mjpg';
                        <!--#endif -->
                      }

                      if (properties_audio_enabled == "yes" && audiochannel_enabled == "yes" && audiosupport == "yes" && (videoformat == "h264+" || videoformat == "mpeg4+") && streamProfUseAudio)
                      {
                        newimagepath += "&audiochannel=" + (parseInt(audiosource, 10) + 1);
                      }
                      video(newimagepath);
                    <!--#endif -->
                    // -->
                    </script>
                  </td>

                  <!--#if expr="$showPTZBars = yes" -->
                    <!--#if expr="$external = no" -->
                      <td><div id="tbar" style=""><!--#include virtual="/incl/tiltbar.shtml" --></div></td>
                    <!--#endif -->
                  <!--#endif -->
                </tr>
              </table>

              <!--#if expr="$root_Layout_Axis = no" -->
                <!--#if expr="$root_Layout_Description_Source != none" -->
                  <table border="0" cellpadding="3" cellspacing="3">
                    <tr>
                      <td class="normalText" align="center"<!--#if expr="$showPTZBars != yes" --> colspan="2"<!--#endif -->>
                        <!--#if expr="$root_Layout_Description_Source = default" --><span id="defDescTxt"></span><!--#else --><!--#echo var="root_Layout_Description_String" option="encoding:html" --><!--#endif -->
                      </td>
                      <!--#if expr="$showPTZBars = yes" --><!--#if expr="$external = no" -->
                        <td width="60"><br></td>
                      <!--#endif --><!--#endif -->
                    </tr>
                  </table>
                <!--#endif -->
              <!--#endif -->
            </td>
          </tr>
            <!--#if expr="$showPTZBars = yes" -->
              <!--#if expr="$external = no" -->
                <tr id="pzbars" style="">
                  <td colspan="4" width="100%">
                  <table name="ptzcontrol_table" width="100%" border="0" cellpadding="0" cellspacing="0">
                    <tr>
                      <td width="50%" align="center">
                        <table width="100%" border="0" cellpadding="0" cellspacing="5">
                          <tr valign="top">
                            <td width="100%">
                              <img src="/pics/blank.gif" width="100%" height="100%">
                            </td>
                          </tr>
                        </table>

                      </td>
                      <td width="5">
                        <img src="/pics/blank.gif" width="5" height="100%">
                      </td>
                      <td valign="top">
                        <!--#include virtual="/incl/bars.shtml" -->
                      </td>
                      <td width="5">
                        <img src="/pics/blank.gif" width="5" height="100%">
                      </td>
                    <td width="50%" align="left">
                      <!--#set var="pcb_showall" val="no" -->
                      <!--#include virtual="/incl/ptzctrlpanel_incl.shtml" -->
                    </td>
                    <td width=1><img src="/pics/blank.gif" width=1 height=1 border=0 alt=""></td>
                    <td width=4><img src="/pics/blank.gif" width=4 height=1 border=0 alt=""></td>
                  </tr>
                </table>
            <!--#endif -->
          <!--#endif -->
            </td>
          </tr>
        </table>

        <!--#if expr="$showPTZBars = yes" -->
          <!--#if expr="$external = no" -->
            <!--#if expr="$cntrlQue = yes" -->
              <table border="0" cellpadding="3" cellspacing="0" width="100%">
                <tr>
                  <td class="subTitle" colspan="4" align="left"><span id="queUsTxt"></span></td>
                </tr>
                <tr>
                  <td nowrap class="oddItem" align="left"><span id="stIQTxt"></span></td>
                  <td nowrap class="oddItem" align="left"><input type="text" name="ptzqstatus" value="" size="65" disabled></td>
                  <td nowrap class="oddItem" align="left"><span id="poIQTxt"></span></td>
                  <td nowrap class="oddItem" align="left"><input type="text" name="ptzqpos" value="" size="10" disabled></td>
                </tr>
                <tr>
                  <td nowrap class="oddItem" align="left"><span id="tiReTxt"></span></td>
                  <td nowrap class="oddItem" align="left"><input type="text" name="ptzqtleft" value="" size="10" disabled>&nbsp;<span id="tiReSecTxt"></span></td>
                  <td nowrap colspan="2" class="oddItem" align="right">
                      <input type="hidden" name="ptzqcontrol" value="request">
                      <input type="hidden" name="ptzqcamera" value="<!--#echo var="camnbr" option="encoding:html" -->">
                      <input type="hidden" name="ptzqtagresponse" value="yes">
                      <input type="button" name="ptzqlabel" class="btnLarge" value="Request control" onClick="JavaScript:ctlReq()">
                      <input type="hidden" name="ptzqcontrol" value="query">
                      <input type="hidden" name="ptzqtagresponse" value="yes">
                      <input type="hidden" name="ptzqcamera" value="<!--#echo var="camnbr" option="encoding:html" -->">
                  </td>
                </tr>
              </table>
                <!--#if expr="$root_PTZ_BoaProtPTZOperator != " -->
                  <!--#include virtual="/sm/sm.srv?action=get&group=PTZ.BoaProtPTZOperator" -->
                <!--#endif -->
                <!--#if expr="$root_System_BoaProtViewer != " -->
                  <!--#include virtual="/sm/sm.srv?action=get&group=System.BoaProtViewer" -->
                <!--#endif -->
                <!--#if expr="$root_PTZ_BoaProtPTZOperator$_$root_System_BoaProtViewer$ != password_anonymous" -->
                  <script language="JavaScript">ctlStart();</script>
                <!--#endif -->
            <!--#endif -->
          <!--#endif -->
        <!--#endif -->

        <!--#if expr="$ptzpresets = yes" -->
          <!--#include virtual="/incl/ptz_incl.shtml" -->
        <!--#elif expr="$showPTZBars = yes" -->
          <!--#if expr="$external = no" -->
            <!--#include virtual="/incl/ptz_incl.shtml" -->
          <!--#endif -->
        <!--#endif -->
      </td>
      <td width=4><img src="/pics/blank.gif" width=4 height=1 border=0 alt=""></td>
      <td width=1 class="lineBg"><img src="/pics/blank.gif" width=1 height=1 border=0 alt=""></td>
    </tr>
    <!-- ################################################################ -->
    <!-- Defines the table width -->
    <tr>
      <td colspan=1 width=1 class="lineBg"><img src="/pics/blank.gif" width=1 height=1 alt=""></td>
      <td colspan=1 width=4><img src="/pics/blank.gif" width=1 height=1 alt=""></td>
      <td colspan=1 width=768><img src="/pics/blank.gif" width=1 height=1 alt=""></td>
      <td colspan=1 width=4><img src="/pics/blank.gif" width=1 height=1 alt=""></td>
      <td colspan=1 width=1 class="lineBg"><img src="/pics/blank.gif" width=1 height=1 alt=""></td>
    </tr>
    <!-- ################################################################ -->
    <tr class="bottom-mainborder">
      <td colspan=2><img src="/pics/line_corner_lb_5x5px.gif" width=5 height=5 alt=""></td>
      <td colspan=1 background="/pics/line_b_100x5px.gif"><img src="/pics/blank.gif" width=1 height=1 alt=""></td>
      <td colspan=2><img src="/pics/line_corner_rb_5x5px.gif" width=5 height=5 alt=""></td>
    </tr>


    <tr>
      <td width=1><img src="/pics/blank.gif" width="1" height="1" border="0" alt=""></td>
      <td colspan=6 valign="middle" align="left">
        <table cellpadding=0 cellspacing=5 border="0">
          <tr>
            <!--#set var="prevCustomLink" val="no" -->
              <!--#if expr="$root_Layout_CustomLink_C0_Enabled = yes" -->
                <!--#if expr="$prevCustomLink = yes" -->
                  <td>|</td>
                <!--#endif -->
                <!--#set var="prevCustomLink" val="yes" -->
                <td>
                <!--#if expr="$root_Layout_CustomLink_C0_Usage = cgi" -->
                  <a id="CustomLink_C0" href="JavaScript:triggerCustomCgi('CustomLink_C0')" customlink="<!--#echo var="root_Layout_CustomLink_C0_URL" option="encoding:url" -->" class="linkInActive"><!--#echo var="root_Layout_CustomLink_C0_Name" option="encoding:html" --></a>
                <!--#elif expr="$root_Layout_CustomLink_C0_Usage = web" -->
                  <a href="<!--#echo var="root_Layout_CustomLink_C0_URL" option="encoding:url" -->" class="linkInActive" target="_blank"><!--#echo var="root_Layout_CustomLink_C0_Name" option="encoding:html" --></a>
                <!--#endif -->
                </td>
              <!--#endif -->
              <!--#if expr="$root_Layout_CustomLink_C1_Enabled = yes" -->
                <!--#if expr="$prevCustomLink = yes" -->
                  <td>|</td>
                <!--#endif -->
                <!--#set var="prevCustomLink" val="yes" -->
                <td>
                <!--#if expr="$root_Layout_CustomLink_C1_Usage = cgi" -->
                  <a id="CustomLink_C1" href="JavaScript:triggerCustomCgi('CustomLink_C1')" customlink="<!--#echo var="root_Layout_CustomLink_C1_URL" option="encoding:url" -->" class="linkInActive"><!--#echo var="root_Layout_CustomLink_C1_Name" option="encoding:html" --></a>
                <!--#elif expr="$root_Layout_CustomLink_C1_Usage = web" -->
                  <a href="<!--#echo var="root_Layout_CustomLink_C1_URL" option="encoding:url" -->" class="linkInActive" target="_blank"><!--#echo var="root_Layout_CustomLink_C1_Name" option="encoding:html" --></a>
                <!--#endif -->
                </td>
              <!--#endif -->
              <!--#if expr="$root_Layout_CustomLink_C2_Enabled = yes" -->
                <!--#if expr="$prevCustomLink = yes" -->
                  <td>|</td>
                <!--#endif -->
                <!--#set var="prevCustomLink" val="yes" -->
                <td>
                <!--#if expr="$root_Layout_CustomLink_C2_Usage = cgi" -->
                  <a id="CustomLink_C2" href="JavaScript:triggerCustomCgi('CustomLink_C2')" customlink="<!--#echo var="root_Layout_CustomLink_C2_URL" option="encoding:url" -->" class="linkInActive"><!--#echo var="root_Layout_CustomLink_C2_Name" option="encoding:html" --></a>
                <!--#elif expr="$root_Layout_CustomLink_C2_Usage = web" -->
                  <a href="<!--#echo var="root_Layout_CustomLink_C2_URL" option="encoding:url" -->" class="linkInActive" target="_blank"><!--#echo var="root_Layout_CustomLink_C2_Name" option="encoding:html" --></a>
                <!--#endif -->
                </td>
              <!--#endif -->
              <!--#if expr="$root_Layout_CustomLink_C3_Enabled = yes" -->
                <!--#if expr="$prevCustomLink = yes" -->
                  <td>|</td>
                <!--#endif -->
                <!--#set var="prevCustomLink" val="yes" -->
                <td>
                <!--#if expr="$root_Layout_CustomLink_C3_Usage = cgi" -->
                  <a id="CustomLink_C3" href="JavaScript:triggerCustomCgi('CustomLink_C3')" customlink="<!--#echo var="root_Layout_CustomLink_C3_URL" option="encoding:url" -->" class="linkInActive"><!--#echo var="root_Layout_CustomLink_C3_Name" option="encoding:html" --></a>
                <!--#elif expr="$root_Layout_CustomLink_C3_Usage = web" -->
                  <a href="<!--#echo var="root_Layout_CustomLink_C3_URL" option="encoding:url" -->" class="linkInActive" target="_blank"><!--#echo var="root_Layout_CustomLink_C3_Name" option="encoding:html" --></a>
                <!--#endif -->
                </td>
              <!--#endif -->
            <!--#if expr="$prevCustomLink = no" -->
              <td>&nbsp;</td>
            <!--#endif -->
          </tr>
        </table>
      </td>
      <td width=1><img src="/pics/blank.gif" width="1" height="1" border="0" alt=""></td>
    </tr>
  </table>
</td></tr>

</form> <!-- wizardForm -->
</table>
</body>
</html>
